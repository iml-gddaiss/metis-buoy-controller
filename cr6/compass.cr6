'### Data Variables ###

Dim raw_compass As String * 100 ' Doesn't need to be Reset. (Not saved in a Table)
Dim Compass(9) As String        ' Doesn't need to be Reset.
Dim Compass_Angles_Sum(5) As Float : Alias Compass_Angles_Sum = RollSum, PitchSum, Heading_x_Sum, Heading_y_Sum

Public Compass_Angles(3) As Float = {"", "", ""} : Alias Compass_Angles = Heading, Pitch, Roll
Units Heading = °
Units Pitch = °
Units Roll = °


Dim UpdateCompassTable As Boolean = false


'### Tables ###
DataTable (FileCompass,UpdateCompassTable,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,Heading, IEEE4)
  Sample (1,Pitch, IEEE4)
  Sample (1,Roll, IEEE4)
EndTable

'min length for a string is 4 (I think)
Function HexaSign(RawSign As String) as String * 4 
  Select Case RawSign
    Case 10
      HexaSign = "+"
    Case Else
      HexaSign = "-" 
  EndSelect
EndFunction


Sub CollectCompass
  ' Roll and Pitch are not circularly average.
  Dim NBR ' Number of Bytes Returned  
  Dim X, Y
  Dim HeadingBuff As Float ' Doesn't need to be Reset.

 
  Compass_Angles_Sum() = 0 'Need to be reste for summation

  SerialOut(SerialTower,"h"&CHR(04)&CHR(01)&CHR(04)&CHR(09),"h",3,50) ' What is this for ? (Maybe its to wake up the compass)
  For Y = 1 To Compass_Sample_Size Step 1
    SerialOut(SerialTower,"h"&CHR(04)&CHR(01)&CHR(04)&CHR(09),"h",1,50)  ' Command = h^D^A^D^I (68 04 01 04 09)
    SerialInRecord(SerialTower,raw_compass,&H68,13,0,NBR,101)   ' First byte sent is address 68 ' &68 -> $
    If raw_compass = "NAN" Then
      Compass_Angles() = ""
      Call logging("Compass Returned: NAN.")
      Call Failled_Sampling_Email("Compass")
      ExitSub
    EndIf        

    For X = 4 To 12                                   ' Setting each HEX byte in Compass Array
      Compass(X-3) = Hex(ASCII(raw_compass(1,1,X)))   ' Received message looks like 68 0D 01 84 00 11 22 10 33 44 05 66 77 99
    Next X                                            '                             ID LG AD MS (- Roll) (+Pitch) ( Head ) CHK

    If Len(Compass(8)) = 1 Then
      Compass(8) = "0" + Compass(8)
    EndIf

    'Array are in order of Roll, Pitch & Heading
    ' maybe use a variable to Dump it in ?
    Call logging("Compass sample ("&Y&"): R=" & HexaSign(Compass(1)) & Compass(2) &"."& Compass(3) & ", P=" & HexaSign(Compass(4)) & Compass(5) &"."& Compass(6) & ", H=" & Compass(7) & Compass(8) & "." & Compass(9)) 'FIXME

    RollSum = RollSum + CTYPE( HexaSign(Compass(1)) & Compass(2) &"."& Compass(3), float)
    PitchSum = PitchSum + CTYPE( HexaSign(Compass(4)) & Compass(5) &"."& Compass(6), float)
    
    HeadingBuff = CTYPE(Compass(7) & Compass(8) & "." & Compass(9), float)
    Heading_x_Sum = Heading_x_Sum + COS(HeadingBuff)
    Heading_y_Sum = Heading_y_Sum + SIN(HeadingBuff)

    Delay(1,400,mSec)
  Next

  
  ' Does Roll and Pitches need to be circularly averaged.
  Roll = Round(RollSum / Compass_Sample_Size, 2) ' Goes from -85 to 85 so this should be fine.
  Pitch = Round(PitchSum / Compass_Sample_Size, 2) ' Goes from -85 to 85 so this should be fine.
  Heading = ATN2(Heading_y_Sum, Heading_x_Sum)
EndSub

Sub ApplyMagneticCorrection
  Call logging("Magnetic Correction: " & Heading & " + " & Magnetic_Variation)
  Heading = Round((Heading + Magnetic_Variation) MOD 360, 2)
EndSub


Sub SampleCompass
  Compass_Angles() = "" ' Compass Angles are always reset since they are used for subsequent calculations.
  
  If With_Compass Then
    Call logging("Sampling Compass")
    WhereAmI = "Sample Compass"   
    
    Call TimerDelay_Sec(Tower_Timer, Compass_Delay_Sec)
        
    Call CollectCompass

    Call ApplyMagneticCorrection

    UpdateCompassTable = true
    
    WhereAmI = "End Compass"
    Call logging("Compass Done")
  EndIf
EndSub
