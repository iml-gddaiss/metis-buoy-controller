'#####################################################################################
'Date: 04 avril 2023
'Authors: Anthony Ouellet & Jérôme Guay
'
'--------------------------------------------------------------------------------------
'--------------------------------- Main Program ---------------------------------------
'--------------------------------------------------------------------------------------

' TODO 

'################################# Instruments #########################################
' + Instrument Serial Port are defined in serials.CR6
' + Water Detectio Channel is defined in water_detection.CR6
'--------------------------------------------
'[Tower]: [Anemometer WMT700] >---------+--> [SerialTower(485)] >-----+-> [SDM-SIO4A] >--+--> [CR6]
'         [Weather station WMXT536] >--/                             /                  /
'         [Compass DCM260B] >---------/                             /                  /
'         [PAR] >--------------------------> [SerialPAR(232)] >----/                  /
'         [HyperOCR_I] >-------------------> [SerialOCRI(232)] >--/                  /
'         [GPS 19xHVS] >-------------------> [SerialGPS(232)] >---------------------/
'--------------------------------------------
'[Well]           #W1 CTD SBE37 w/ Pump SBE05
'                 #W2 SeaFet
'                 #W3 ECO-Triplet
'                 #W4 SUNA
'                 #W5 PCO2
'                 #W6 Flowmeter
'                 #W7 HyperOCR_R
'--------------------------------------------
'[Miscellaneous]  #M1 Wave monitor
'                 #M2 Water detection
'                 #M3 Power controller
'                 #M4 ADCP
'                 #M5 Winch
'--------------------------------------------
'############################### Naming Conventions ####################################

'#######################################################################################

SequentialMode
AngleDegrees
PreserveVariables

Public WhereAmI As String ' Debug Purposes ' Maybe merge WhereAmI and Loggings

Public ScanTimeStamp(2) As String : Alias ScanTimeStamp = ScanDate, ScanTime 

Public TAGString As String * 2000 ' TODO fixme check if lengths is ok

'########### CR6 Scripts Imports (Includes)
Include "CPU:buoy_config.cr6"                   '#   Declare Buoy Config
Include "CPU:serials.cr6"                       '#   Define all Serials and Channels
Include "CPU:logging.cr6"                       '#   Logging module
Include "CPU:timers.cr6"                        '#   Timer Values module



'#######  Instruments
Include "CPU:wmt700.cr6"                    
Include "CPU:wxt536.cr6"                    
Include "CPU:compass.cr6"                   
Include "CPU:gps.cr6"                       
Include "CPU:par.cr6"                       
Include "CPU:SBE37_cr6"                     
Include "CPU:eco_triplet.cr6"               
Include "CPU:seafet.cr6"                    
Include "CPU:suna.cr6"                      
Include "CPU:pco2.cr6"                      
Include "CPU:ocr.cr6"                       
Include "CPU:wave.cr6"             
Include "CPU:power_controller.cr6"  
Include "CPU:adcp.cr6"              
Include "CPU:winch.cr6"             

Include "CPU:tower.cr6"                    
Include "CPU:water_detection.cr6"          
Include "CPU:well_pump.cr6"                

'####### Processing
Include "CPU:weather.cr6"    ' Build Wind-Atms tables and Wind-Atms-PAR Tag Strings from WMT, WXT and PAR.

'####### Slow Sequence | User Command Interface
Include "CPU:slow_sequences.cr6"             ' ?


' FileRaw data from the instruments. Needs to be decalred after the Imports
DataTable (FileRaw,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,RawWXT536_Wind,String)
  Sample (1,RawWXT536_Weather,String)
  Sample (1,RawWXT536_Rain,String)
  Sample (1,RawWMT700,String)
  Sample (1,RawGPS,String)
  Sample (1,RawPAR,String)  
  Sample (1,RawWave,String)
  Sample (1,RawPower,String)
  Sample (1,RawSBE37,String)
  Sample (1,RawTriplet,String)
  Sample (1,RawSeafet,String)  
  Sample (1,RawSUNADark,String)
  Sample (1,RawSUNALight,String)
  Sample (1,RawPCO2_Water,String)
  Sample (1,RawPCO2_Air,String)
  Sample (1,WinchMessage,String)
EndTable

DataTable (FileTAGS,1,-1) ' fixme change name
  DataInterval(0,0,Sec,10)
  Sample (1, TAGString, String)
EndTable

Function InitTagString as String * 120 ' may be too much, but maybe not FIXME
  InitTagString = "[INIT]" & Buoy_Name & "," & ScanDate & "," & ScanTime & "," & Latitude & "," & Longitude & "," & Heading & "," & Pitch & "," & Roll & "," & COG & "," & SOG & "," & Water_Detection_Main
EndFunction

Function EndTagString as String
  EndTagString = "[END]" & CHR(10)
EndFunction

Sub ResetTablesUpdateFlag
  UpdateGPSTable = false
  UpdateCompassTable = false
  UpdatePowerTable = false
  UpdateTripleTable = false
  UpdateHyperOCRTable = false
  UpdateSBE37Table = false
  UpdateSeafetTable = false
  UpdateSUNATable = false
  UpdatePARTable = false
  UpdateWXT536Table = false
  UpdateWMT700Table = false
  UpdateWeatherTable = false
  UpdateWaveTable = false
  UpdateADCPTable = false 
  UpdatePCO2Tables = false
EndSub

Sub ResetRawStrings
  ' Safety, if an instrument is disabled, the last string will not propagate.
  RawWXT536_Wind = ""
  RawWXT536_Weather = ""
  RawWXT536_Rain = ""
  RawWMT700 = ""
  RawGPS = ""
  RawPAR = ""
  RawWave = ""
  RawPower = ""
  RawSBE37 = ""
  RawTriplet = ""
  RawSeafet = ""
  RawSUNADark = ""
  RawSUNALight = ""
  
  Call ResetPCO2RawStrings
EndSub


Sub GetScanDateTime
  SplitStr(ScanTimeStamp, Public.TimeStamp(4,0), " ", 2, 5) ' ScanTimeStamp = (ScanDate, ScanTime)
  Call logging("Scan TimeStamp: " & ScanDate &"T"& ScanTime)
EndSub

Sub GPSTimeAjustment 
  If With_GPS AND GPS_Date <> "" AND GPS_Time <> "" Then
    ClockSet(GPS_Date &" "& GPS_Time)
    Call logging("Update Buoy Clock with GPS")
  EndIf

EndSub


BeginProg
  SetSetting("WIFIconfig",4) 'This is turning the Wifi Off 
  
  Call CloseSerialPorts

  Call StartADCP

  Call StartRainTimer

  Scan(Buoy_Interval_Min,Min,0,0)

  WhereAmI = "Initializing instrument"
  
  Call logging(">>>>>>>>>>>> Scan Start")

  SlowSequenceLocked = True ' Lockling Slow Sequence
  
  Call GetScanDateTime
    
  Call PowerWaterDetectionMain
      
  Call PowerTowerInstruments ' PAR, WMT700, Compass, With_OCR_I. Start Tower_Timer

  Call StartPAR

  Call StartTower485         ' WXT536, WMT700, Compass

  Call SampleGPS             ' GPS samples for 10s. Gives time to other tower instrument to initialize.

  Call GPSTimeAjustment

  Call ResetWXT536

  Call StartWMT700           ' Slow to start
  
  Call StartATMSTimer

  Call SBE37SalinityCheck ' Skipped if BypassSalinity is true.
    
  Call PowerWellPump        ' Power Well Pump and Start Well Timer.
  
  Call StartTriplet         ' Starts Triplet_Timer
  
  Call SampleCompass        ' Requires GPS Magnetic Declination
  
  Call CheckWaterDectectionMain

  TAGString = InitTagString()             'Requires Gps, Compass and WaterDectection Variables.
    
  Call SamplePowerController

  Call CollectTriplet
  
  ' ### Well Pump InstrumentTower ###
  Call WaitForWellPump   ' Well Instrument that required SBE37, Seafet, SUNA, OCR_R (Sensor Conditionning).
  Call StartSUNA         ' why don't isn't SUNA started in THE begining --- FIXME ---
  Call SampleOCRs
  Call SampleSBE37
  Call SampleSeafet(SBE37_Temperature, SBE37_Salinity)
  Call CollectSUNA
  Call StopWellPump 
  
  ' ### Tower Instruments ##
  Call WaitForWeather        ' Tower Instrument that required to sample over time
  Call CollectPAR
  Call CollectWXT536 
  Call CollectWMT700
  Call StopTower485
        
  Call ProcessWeather(Heading)     

  Call SampleWave

  Call CollectADCP
  
  Call PCO2Sampling

  Call logging("Scan Sampling Done.")
  
  Call WinchMission

  Call logging("Closing serial ports.")

  Call CloseSerialPorts

  ' ### Updating Table Files ### ' Each Table is define with an update Condition.
  Call logging("Updating Tables.")
  CallTable FileGPS
  CallTable FileCompass
  CallTable FilePower
  CallTable FileTriplet
  CallTable FileHyperOCR
  CallTable FileSBE37
  CallTable FileSeafet
  CallTable FileSUNA_Light
  CallTable FileSUNA_Dark
  CallTable FilePAR
  CallTable FileWXT536
  CallTable FileWMT700
  CallTable FileWeather
  CallTable FileWave
  CallTable FileADCP
  CallTable FilePCO2A
  CallTable FilePCO2W  
  CallTable FileRaw
  
  Call ResetRawStrings

  Call ResetTablesUpdateFlag
  
  TAGString &= "\n" & EndTagString()
  CallTable FileTAGS

  Call CollectWinch

  TriggerSequence (1,0) ' Unlocking Slow Sequence
  
  WhereAmI = "Scan end"
  Call logging("Scan finished. <<<<<<<<<<<<" & CHR(13) & CHR(10))
  
  NextScan
	
  SlowSequence
    Do
      If SlowSequenceLocked Then
        Call logging("Slow Sequence Locked")
        WaitTriggerSequence
        SlowSequenceLocked = false
        Call logging("Slow Sequence Unlocked")
      EndIf
        
      Call TowerSwitchSequence
      Call WellSwitchSequence
      Call WinchStartSequence
      Call ADCPBreakSequence
      ' Call ADCPUpdateSequence
      Call ADCPDeploySequence
      Call ADCPShutdownSequence
      Delay(1,1,Sec)
    Loop
EndProg


