' GPS_HVS related code

'### Data Variables ###
Dim RawGPS As String * 100
'GPS is a builtin CR6 array 
Dim GPS_HVS(13) As String : Alias GPS_HVS = GPS_Header, GPS_Time, GPS_Status, GPS_Lat, GPS_Lat_Hem, GPS_Lon, GPS_Lon_Hem, GPS_SOG, GPS_COG, GPS_Date, GPS_Mag_Var, GPS_Mag_Var_Dir, GPS_Check

' Variable For GPS_HVS Tabe
Public Latitude As String
Public Longitude As String
Public SOG As Float = ""
Public COG As Float = ""
Public Magnetic_Variation As Float = ""

Dim Latitude_Decimal As Float = ""
Dim Longitude_Decimal As Float = ""

' Use to store instant query of the gps value by GetGPSPosition(). Not saved as data.
Dim latitude_tmp As String
Dim longitude_tmp As String


'### Units ###
Units SOG = Kn
Units COG = °
Units Magnetic_Variation = °

Dim UpdateGPSTable As Boolean = false

'### Tables ###
DataTable(FileGPS,UpdateGPSTable,-1)
    DataInterval(0,0,Sec,10)
    Sample(1,GPS_Date, String)
    Sample(1,GPS_Time, String)
    Sample(1,Latitude, String)
    Sample(1,Longitude, String)  
    Sample(1,SOG, IEEE4)
    Sample(1,COG, IEEE4)
    Sample(1,Magnetic_Variation , IEEE4)
EndTable


Sub StartGPS
    SerialOpen(SerialGPS,19200,3,20,1000)
EndSub


Sub CollectGPS
    Dim X
    Dim UV(2) As Float = {0, 0}: Alias UV = U, V

    UV() = 0
    GPS_HVS() = "" ' Reset Var
    
    Latitude = "" ' Reset to missing ? -> "#°#'#" or empty
    Longitude = ""
    SOG = ""
    COG = ""
    Magnetic_Variation = ""

    Latitude_Decimal = ""
    Longitude_Decimal = ""
    
    SerialFlush(SerialGPS) ' To clear buffer (continuous feed)
    SerialIn(RawGPS,SerialGPS,150,10,80) '(to make sure it didn't cut mid transmission.)

    ' Averaging SOG and COG over time. 
    For X = 1 To GPS_Sample_Size Step 1 ' GPS should be setup to 1 sec interval to get GPS_Sample_Size to correspond to seconds.
        SerialIn(RawGPS,SerialGPS,150,10,80)
        Call logging("Last Raw GPS (" &X& "): " & RawGPS)
        SplitStr(GPS_HVS,RawGPS,",",13,5)
        
        If GPS_SOG = "" Then
            Call logging("No Speed Overground returned. Skipping remaining gps sampling.")
            UV() = ""
            ExitFor
        Else    
            'Fimxe fix a removed _Buf if not used.
            U += CTYPE(GPS_SOG, float) * COS(CTYPE(GPS_COG, float))
            V += CTYPE(GPS_SOG, float) * SIN(CTYPE(GPS_COG, float))
        EndIf
    Next

    If RawGPS <> "" Then
        'COG and SOG time averaging.
        SOG = Round( SQR(U^2 + V^2) / GPS_Sample_Size, 2)
        COG = Round( ATN2(V, U), 1) MOD 360
        Call logging("GPS  Averaging: SOG="& SOG &", COG="& COG)

        
        'Formatting Date & Time String
        GPS_Date = "20"&Mid(GPS_Date,5,2) &"-"& Mid(GPS_Date,3,2) &"-"& Mid(GPS_Date,1,2)
        GPS_Time = Mid(GPS_Time,1,2) &":"& Mid(GPS_Time,3,2) &":"& Mid(GPS_Time,5,2)

        ' Converting Lat, Lon to Degree
        Latitude = Mid(GPS_Lat,1,2) &"°"& Mid(GPS_Lat,3,6) &"'"& GPS_Lat_Hem
        Longitude = Mid(GPS_Lon,1,3) &"°"& Mid(GPS_Lon,4,6) &"'"& GPS_Lon_Hem

        Latitude_Decimal = CTYPE(Mid(GPS_Lat,1,2),float) + CTYPE(Mid(GPS_Lat,3,6), float) / 60
        Longitude_Decimal = CTYPE(Mid(GPS_Lon,1,3), float) + CTYPE(Mid(GPS_Lon,4,6), float) / 60

        If GPS_Lat_Hem = "S" Then
            Latitude_Decimal *= -1
        EndIf
        
        If GPS_Lon_Hem = "W" Then
            Longitude_Decimal *= -1
        EndIf

        ' Converting Magnetic Variation to decimal
        Magnetic_Variation  = CTYPE(GPS_Mag_Var, float)
        If GPS_Mag_Var_Dir = "W" Then
            Magnetic_Variation  *= -1
        EndIf
    Else
        Call Failed_Sampling_Warning("GPS") 
    EndIf
EndSub



'### Sampling ###
Sub SampleGPS
    If With_GPS Then
        Call logging("Sampling GPS")
        
        Call StartGPS

        Call CollectGPS
        
        SerialClose(SerialGPS)
        
        UpdateGPSTable = true
        
        Call logging("GPS Done")
    EndIf
EndSub

Sub GetGPSPosition
    Dim _rawgps_ as String * 100
    Dim _GPS_HVS_(13) As String

    latitude_tmp = ""
    longitude_tmp = ""

    If With_GPS
        Call logging("Collecting GPS for Winch Manual Override")
        
        SerialFlush(SerialGPS) ' To clear buffer (continuous feed)
        SerialIn(_rawgps_,SerialGPS,150,10,80) '(to make sure it didn't cut mid transmission.)
        SerialIn(_rawgps_,SerialGPS,150,10,80)

        SerialClose(SerialGPS)

        SplitStr(_GPS_HVS_,_rawgps_,",",13,5)

        latitude_tmp = _GPS_HVS_(4)
        longitude_tmp = _GPS_HVS_(5)
    Else
        Call logging("Could not get position, With_GPS is False.")
    EndIf
EndSub
