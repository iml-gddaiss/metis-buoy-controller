' adcp related code
'### Serial Port ###
' Const SerialADCP = 12 'U3-U4


'### Data Variables ###
Dim RawADCP(31) As String * 100

Dim ADCPHeader(3) As String : Alias ADCPHeader = ADCPDate, ADCPTime, ADCPSmpNbr
Dim ADCPBin1(11) As Float : Alias ADCPBin1 = Bin, ADCPDir, ADCPMag, EW, NS, Vert, Err, Echo1, Echo2, Echo3, Echo4


'### Units ###
'### Tables ###
DataTable(FileADCP,1,-1)
  DataInterval(0,0,Sec,10)
  Sample(1,RawADCP(1),String)
  Sample(1,RawADCP(2),String)
  Sample(1,RawADCP(3),String)
  Sample(1,RawADCP(4),String)
  Sample(1,RawADCP(5),String)
  Sample(1,RawADCP(6),String)
  Sample(1,RawADCP(7),String)
  Sample(1,RawADCP(8),String)
  Sample(1,RawADCP(9),String)
  Sample(1,RawADCP(10),String)
  Sample(1,RawADCP(11),String)
  Sample(1,RawADCP(12),String)
  Sample(1,RawADCP(13),String)
  Sample(1,RawADCP(14),String)
  Sample(1,RawADCP(15),String)
  Sample(1,RawADCP(16),String)
  Sample(1,RawADCP(17),String)
  Sample(1,RawADCP(18),String)
  Sample(1,RawADCP(19),String)
  Sample(1,RawADCP(20),String)
  Sample(1,RawADCP(21),String)
  Sample(1,RawADCP(22),String)
  Sample(1,RawADCP(23),String)
  Sample(1,RawADCP(24),String)
  Sample(1,RawADCP(25),String)
  Sample(1,RawADCP(26),String)
  Sample(1,RawADCP(27),String)
  Sample(1,RawADCP(28),String)
  Sample(1,RawADCP(29),String)
  Sample(1,RawADCP(30),String)
  Sample(1,RawADCP(31),String)
EndTable


Sub UpdateADCPTable
  Scan(1,Sec, 0, 1)
  CallTable FileADCP
  NextScan
EndSub


Function ADCPTagString As String
  ADCPTagString = "[RDI]" & ADCPDate & "," & ADCPTime & "," & ADCPDir & "," & ADCPMag
EndFunction


'### Sampling ###
Sub StartADCP
  If With_ADCP Then  
    Call logging("Starting ADCP")
    SerialOpen(SerialADCP,115200,3,0,3000)
    ' DONT FLUSH HERE IMPORTANT
  EndIf
EndSub
 

''' control sequence: dump until `\n\n` then read until the next `\n\n`. `\n` -> CHR(10)
Sub CollectADCP(TAGString)
  ''' Serial Reading Process
  ''' 1: Read each line until nothing is left.
  ''' 1.1: Split the line in 11 (num_cols) and appends it to a string seprated with comma.
  ''' 2: Makes Data String
  ''' 3: Flush Serial
  Dim RawBuffer As String * 100
  Dim RawBin(11) As Float
  Dim row
  Dim col
  Dim num_cols = 11
  
  If With_ADCP Then  
    row = 1
    Do
      SerialIn(RawBuffer, SerialADCP, 10, 10, 100)
      
      If Len(RawBuffer) = 0 Then
        ExitDo
      EndIf
      
      SplitStr(RawBin, RawBuffer, " ", num_cols, 10)

      Call logging("ADCP raw bin:" & RawBin)
      
      For col = 1 To num_cols
        RawADCP(row) &= RawBin(col)
        If col < num_cols Then
          RawADCP(row) &= ","
      Next col

      Call logging("RawADCP (row=" & row & "): " & RawADCP(row))

      row += 1
            
    Loop


    Call logging("Raw ADCP: `" & RawADCP & "`")
    SplitStr(ADCPHeader,RawADCP(1)," ",3,5)
    SplitStr(ADCPBin1,RawADCP(5),",",11,5)

    SerialFlush(SerialADCP)

    Call UpdateADCPTable

    TAGString = ADCPTagString()
    Call WriteTagString '------------------------------------- Defined in main.cr6
  EndIf
EndSub



'### Processing ###