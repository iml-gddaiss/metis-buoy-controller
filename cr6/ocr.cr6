'OCR related code
'### Serial Port ###

' Const SerialOCRI = 34
' Const SerialOCRR = 39 'RS232



'### Data Variables ###
Public OCRR_String As String * 1000
Public OCRI_String As String * 1000

Dim UpdateHyperOCRTable As Boolean = false


'### Units ###
'### Tables ###
DataTable(FileHyperOCR,UpdateHyperOCRTable,-1)
  DataInterval(0,0,Sec,10)
  Sample(1,OCRR_String,String)
  Sample(1,OCRI_String,String)
EndTable

Function CollectOCR(OCR_Type As String) As String * 1000
  Dim X, Y  
  
  Dim RawHex As String * 500
  Dim NBR ' Number of Bytes Returned
  
  Dim String_Buffer As String
  Dim OCR_String As String * 1000

  OCR_String = "" ' Need to be reinitialized. Dim declared in SubRoutines are only initialized at compile time.

        
  For Y = 1 To 3
    If OCR_Type = "R" Then
      SerialInRecord(SerialOCRR,RawHex,&H5341,0,&H0D0A,NBR,101)
    Else
      SerialInRecord(SerialOCRI,RawHex,&H5341,0,&H0D0A,NBR,101)
    EndIf

    String_Buffer = Hex(ASCII(RawHex(1,1,1)))
    
    If String_Buffer = "54" Then
      For X = 1 To 393
        String_Buffer = Hex(ASCII(RawHex(1,1,X)))
        If Len(String_Buffer) = 1 Then
          String_Buffer = "0" + String_Buffer
        EndIf
        OCR_String = OCR_String + String_Buffer
      Next X      
      OCR_String = "5341" + OCR_String + "0D0A"      
      ExitFor
    EndIf
    Delay(1,2,Sec)
  Next Y

  Return OCR_String

EndFunction


'### Sampling ###
' Sub CollectOCRR
'   ' &5341 -> SA &0D0A -> CR LF
'   Dim X, Y  
  
'   Dim RawHex As String * 500
'   Dim NBR ' Number of Bytes Returned
  
'   Dim String_Buffer As String
'   Dim OCR_String As String * 1000

'   OCRR_String = ""
        
'   For Y = 1 To 3
'     SerialInRecord(SerialOCRR,RawHex,&H5341,0,&H0D0A,NBR,101)
'     String_Buffer = Hex(ASCII(RawHex(1,1,1)))
    
'     If String_Buffer = "54" Then
'       For X = 1 To 393
'         String_Buffer = Hex(ASCII(RawHex(1,1,X)))
'         If Len(String_Buffer) = 1 Then
'           String_Buffer = "0" + String_Buffer
'         EndIf
'         OCR_String = OCR_String + String_Buffer
'       Next X      
'       OCR_String = "5341" + OCR_String + "0D0A"      
'       ExitFor
'     EndIf
'     Delay(1,2,Sec)
'   Next Y
  
'   OCRR_String = OCR_String

' EndSub


' Sub CollectOCRI
'   ' &5341 -> SA &0D0A -> CR LF
'   Dim X, Y  

'   Dim RawHex As String * 500
'   Dim NBR ' Number of Bytes Returned
'   Dim String_Buffer As String
  
'   OCRI_String = ""
  
'   For Y = 1 To 3
'     SerialInRecord(SerialOCRI,RawHex,&H5341,0,&H0D0A,NBR,101)
'     String_Buffer = Hex(ASCII(RawHex(1,1,1)))
'     If String_Buffer = "54" Then
'       For X = 1 To 393
'         String_Buffer = Hex(ASCII(RawHex(1,1,X)))
'         If Len(String_Buffer) = 1 Then
'           String_Buffer = "0" + String_Buffer
'         EndIf
'         OCRI_String = OCRI_String + String_Buffer
'       Next X
'       OCRI_String = "5341" + OCRI_String + "0D0A"
'       ExitFor
'     EndIf
'     Delay(1,2,Sec)
'   Next Y
' EndSub


Sub SampleOCRs
  
  If With_OCR_R AND Well_IsPowered Then
    WhereAmI = "Sample OCR R"
    
    SerialOpen(SerialOCRR,19200,3,0,800)
    Call TimerDelay_Sec(Pump_Timer, OCR_R_Delay_Sec)
    SerialFlush(SerialOCRR)
  
    OCRR_String = CollectOCR("R")
    
    SerialClose(SerialOCRR)
    
    UpdateHyperOCRTable = true
    WhereAmI = "End OCRR"
  EndIf
  
  If With_OCR_I Then ' Tower is Powered ?
    WhereAmI = "Sample OCR I"

    SerialOpen(SerialOCRI,19200,51,0,800)
    Call TimerDelay_Sec(Tower_Timer, OCR_I_Delay_Sec)
    SerialFlush(SerialOCRI)

    OCRI_String = CollectOCR("I")

    SerialClose(SerialOCRI)
    
    UpdateHyperOCRTable = true
    WhereAmI = "End OCRI"
  EndIf
  
EndSub
