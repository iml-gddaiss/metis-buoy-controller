Public Manual_Tower_Switch As Boolean = false
Public Manual_WellPump_Switch As Boolean = false

Public Open_Winch_Serial_Override As Boolean = false
Public Start_Winch_Mission_Override As Boolean  = false

Public Send_Break_to_ADCP As Boolean = false

Public Deploy_ADCP_Switch As Boolean = false
Public Shutdown_ADCP_Switch As Boolean = false

Public Send_test_email As Boolean = false

Public Reset_Instrument_Warnings_Switch As Boolean = False

Dim Winch_Serial_IsOpened as Boolean = False

Sub TowerSwitchSequence
    If Manual_Tower_Switch AND NOT Tower_IsPowered Then
        SW12(SW12_1,1)
        Tower_IsPowered = true
    EndIf
    
    If NOT Manual_Tower_Switch AND Tower_IsPowered Then
        SW12(SW12_1,0)
        Tower_IsPowered = false
    EndIf
EndSub

Sub WellSwitchSequence
    If Manual_WellPump_Switch AND NOT WellPump_IsPowered Then
        SW12(SW12_2,1)
        WellPump_IsPowered = true
    EndIf
        
    If NOT Manual_WellPump_Switch AND WellPump_IsPowered Then 
        SW12(SW12_2,0)
        WellPump_IsPowered = false
    EndIf
EndSub

Sub ADCPBreakSequence 'Doest not work
    If Send_Break_to_ADCP Then
        If 11 <= SerialADCP and SerialADCP <= 16 Then
            SerialBrk(SerialADCP,200)
        EndIf
        Send_Break_to_ADCP = false
    EndIf
EndSub

Sub ADCPDeploySequence
    If Deploy_ADCP_Switch = true Then
        Call DeployADCP
    EndIf
    Deploy_ADCP_Switch = false
EndSub

Sub ADCPShutdownSequence
    If Shutdown_ADCP_Switch = true Then
        Call ShutdownADCP
        Shutdown_ADCP_Switch = false
    EndIf
EndSub

Sub WinchOpenSerialSequence
    
    If WinchStatus <> "Standby" Then
        ExitSub
    EndIf

    If Open_Winch_Serial_Override Then
        If Not Winch_Serial_IsOpened Then
            Call StartWinch
        EndIf
    ElseIf Winch_Serial_IsOpened Then
        SerialClose(SerialWinch)
    EndIf
EndSub


Sub WinchStartMissionSequence
    If Start_Winch_Mission_Override Then
        Call logging("Winch Manual Override")
        Call WinchRoutine

        Start_Winch_Mission_Override = false
    EndIf
EndSub

Sub Reset_Instrument_Warnings 'TODO TEST ME
    Dim X
    If Reset_Instrument_Warnings_Switch Then
        Call logging("Instrument Warnings Reset")
        For X = 1 To 15 Step 1
            Instrument_Failed_Warnings(X) = False ' array of all the flags
        Next X
        Reset_Instrument_Warnings_Switch = False
    EndIf
EndSub


Sub EmailTestSequence
    If Send_test_email Then
        Call Email_Init(1, "Test")

        Call Email_add_line("Warning Email & SMS Test")
        Call SendEmail
        Send_test_email = false
    EndIf
EndSub
