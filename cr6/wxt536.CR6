'WXT536 related code

'### Data Variables ###
Dim RawWXT536_Wind As String * 80
Dim RawWXT536_Weather As String * 80
Dim RawWXT536_Rain As String * 80

'The wind is Dim because it depends on the presence of WMT700
Dim WXT536_Wind(6) As Float : Alias WXT536_Wind = WXT536_Dir_Min, WXT536_Dir_Ave, WXT536_Dir_Max, WXT536_Spd_Min, WXT536_Spd_Ave, WXT536_Spd_Max
Dim WXT536_Weather(3) As Float : Alias WXT536_Weather = WXT536_Air_Temperature, WXT536_Air_Humidity, WXT536_Air_Pressure
Dim WXT536_Rain(6) As Float : Alias WXT536_Rain = WXT536_Rain_Total, WXT536_Rain_Duration, WXT536_Rain_Intensity, WXT536_Hail_Total, WXT536_Hail_Duration, WXT536_Hail_Intensity

Dim UpdateWXT536Table As Boolean = false

'### Units ###
Units WXT536_Air_Temperature = 째C
Units WXT536_Air_Humidity = %
Units WXT536_Air_Pressure = hPa
Units WXT536_Dir_Min = 째
Units WXT536_Dir_Ave = 째
Units WXT536_Dir_Max = 째
Units WXT536_Spd_Min = Kn
Units WXT536_Spd_Ave = Kn
Units WXT536_Spd_Max = Kn
Units WXT536_Rain_Total = mm
Units WXT536_Rain_Duration = sec
Units WXT536_Rain_Intensity = mm/h
Units WXT536_Hail_Total = mm
Units WXT536_Hail_Duration = sec
Units WXT536_Hail_Intensity = mm/h


'### Tables ###
DataTable(FileWXT536,UpdateWXT536Table,-1)
  DataInterval (0,0,Sec,10)
  Sample (1,WXT536_Air_Temperature,IEEE4)
  Sample (1,WXT536_Air_Humidity,IEEE4)
  Sample (1,WXT536_Air_Pressure,IEEE4)
  Sample (1,WXT536_Dir_Min,IEEE4)
  Sample (1,WXT536_Dir_Ave,IEEE4)
  Sample (1,WXT536_Dir_Max,IEEE4)
  Sample (1,WXT536_Spd_Min,IEEE4)
  Sample (1,WXT536_Spd_Ave,IEEE4)
  Sample (1,WXT536_Spd_Max,IEEE4)
  Sample (1,WXT536_Rain_Total,IEEE4)
  Sample (1,WXT536_Rain_Duration,IEEE4)
  Sample (1,WXT536_Rain_Intensity,IEEE4)
  Sample (1,WXT536_Hail_Total,IEEE4)
  Sample (1,WXT536_Hail_Duration,IEEE4)
  Sample (1,WXT536_Hail_Intensity,IEEE4)
EndTable

Sub StartRainTimer
  If With_WXT536 Then
    Call logging("Starting Rain Timer")
    Timer(Rain_Timer,Hr, 2)
  EndIf
EndSub


'### Sampling ###
Sub ResetWXT536
  If With_WXT536 Then        
    ' Reset Rain if 00:00 or active for more than 24h
    If ScanTime = "00:00:00" OR  Timer(Rain_Timer,Hr,4) >= Rain_Interval_Hr Then
      SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZRU"&CHR(13)&CHR(10),"",1,0)
      SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZRI"&CHR(13)&CHR(10),"",1,0)
      Timer(Rain_Timer,Hr,2) 'Timer #6 Reset&Start
      Call logging("WXT536 Rain and Rain Timer Reset")
    EndIf	
        
    'Reset wind & weather measurements    
    SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZM"&CHR(13)&CHR(10),"",1,0)    
  EndIf
EndSub


Sub CollectWXT536
  Dim X
  
  If With_WXT536 Then
    Call logging("Collecting WXT536")

    WXT536_Wind () = ""
    WXT536_Rain () = ""
    WXT536_Weather() = ""

    RawWXT536_Wind = ""
    RawWXT536_Weather = ""
    RawWXT536_Rain = ""

    For X = 1 To 3 Step 1
      SerialOut(SerialTower,CHR(13)&CHR(10),0,1,10)
      
      If RawWXT536_Wind = "" Then
        SerialOut(SerialTower,"2R1!", "2R1,",1,50)
        SerialIn(RawWXT536_Wind,SerialTower,20,13,80)
        Call logging("Raw WXT536 Wind (attempt "&X&"): " & RawWXT536_Wind) 
        SplitStr(WXT536_Wind(),RawWXT536_Wind,",",6,10)
        If WXT536_Wind(6) = "" Then
          RawWXT536_Wind = ""
        EndIf
      EndIf

      If RawWXT536_Weather = "" Then
        SerialOut(SerialTower,"2R2!","2R2,",1,50)
        SerialIn(RawWXT536_Weather,SerialTower,20,13,80)
        Call logging("Raw WXT536 Weather (attempt "&X&"): " & RawWXT536_Weather) 
        SplitStr(WXT536_Weather(),RawWXT536_Weather,",",3,10)
        If WXT536_Weather(3) = "" Then
          RawWXT536_Weather = ""
        EndIf
      EndIf

      If RawWXT536_Rain = "" Then
        SerialOut(SerialTower,"2R3!","2R3,",1,50)
        SerialIn(RawWXT536_Rain,SerialTower,20,13,80)
        Call logging("Raw WXT536 Rain (attempt "&X&"): " & RawWXT536_Rain) 
        SplitStr(WXT536_Rain(),RawWXT536_Rain,",",6,10)
        If WXT536_Rain(6) = "" Then
          RawWXT536_Rain = ""
        EndIf
      EndIf

    Next X

    If RawWXT536_Wind = "" OR RawWXT536_Weather = "" OR RawWXT536_Rain = "" Then
      Call Failed_Sampling_Warning("WXT536")
    EndIf   

    UpdateWXT536Table = true

    Call logging("WXT536 Done")
  EndIf
EndSub
