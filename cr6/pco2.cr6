'PCO2 related code
'### Serial Port ###
' Const SerialPCO2 = 40 'RS232


'### Data Variables ###
Dim RawPCO2 As String * 1000
Dim RawPCO2_Air As String * 100
Dim RawPCO2_Water As String * 100

Public PCO2_Last_Sample As Long
Public PCO2_Sampling As Boolean

Dim PCO2WStart
Dim PCO2WEnd
Dim PCO2AStart
Dim PCO2AEnd


Dim PCO2(14) As String : Alias PCO2 = PCO2_Year, PCO2_Month, PCO2_Day, PCO2_Hour, PCO2_Minute, PCO2_Second, PCO2_Zero, PCO2_AD, CO2, Ave_IRGA, PCO2_Humidity, PCO2_Temp, PCO2_Gaz_Pressure, PCO2_Voltage
Dim CO2_Water = "#.#", PCO2_Gaz_Pressure_Water, PCO2W_Humidity, CO2_Air = "#.#", PCO2_Gaz_Pressure_Air
Dim PCO2_Date As String, PCO2_Time As String, PCO2_Type As String


'### Units ###
Units CO2_Water = ppm
Units CO2_Air = ppm
Units PCO2_Gaz_Pressure_Water = mbar
Units PCO2_Gaz_Pressure_Air = mbar
Units PCO2W_Humidity = %


'### Tables ###
DataTable(FilePCO2W,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,PCO2_Type,String)
  Sample (1,PCO2_Date,String)
  Sample (1,PCO2_Time,String)
  Sample (1,PCO2_Zero,IEEE4)
  Sample (1,PCO2_AD,IEEE4)
  Sample (1,CO2_Water,String)
  Sample (1,Ave_IRGA,IEEE4)
  Sample (1,PCO2_Humidity,IEEE4)
  Sample (1,PCO2_Temp,IEEE4)
  Sample (1,PCO2_Gaz_Pressure,IEEE4)
  Sample (1,PCO2_Voltage,IEEE4)
  Sample (1,RawPCO2,String)
  Sample (1,RawPCO2_Water,String)
EndTable

DataTable(FilePCO2A,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,PCO2_Type,String)
  Sample (1,PCO2_Date,String)
  Sample (1,PCO2_Time,String)
  Sample (1,PCO2_Zero,IEEE4)
  Sample (1,PCO2_AD,IEEE4)
  Sample (1,CO2_Air,String)
  Sample (1,Ave_IRGA,IEEE4)
  Sample (1,PCO2_Humidity,IEEE4)
  Sample (1,PCO2_Temp,IEEE4)
  Sample (1,PCO2_Gaz_Pressure,IEEE4)
  Sample (1,PCO2_Voltage,IEEE4)
  Sample (1,RawPCO2,String)
  Sample (1,RawPCO2_Air,String)
EndTable


Sub EmptyPCO2Table
  Scan(1,Sec, 0, 1)
  CallTable FilePCO2W
  CallTable FilePCO2A
  NextScan
  RawPCO2_Water = ""
  RawPCO2_Air = ""
  PCO2_Sampling = false
EndSub


Sub PCO2ATable
  Scan(1,Sec, 0, 1)
  CallTable FilePCO2A
  NextScan
EndSub


Sub PCO2WTable
  Scan(1,Sec, 0, 1)
  CallTable FilePCO2W
  NextScan
EndSub


'### Sampling ###

Sub StartPCO2
  RawPCO2 = ""
  RawPCO2_Water = ""
  RawPCO2_Air = ""
  
  SerialOpen(SerialPCO2,19200,3,20,500)
  Delay(1,1,Sec)
  SerialFlush(SerialPCO2)
  SerialOut(SerialPCO2,CHR(27),"",2,50)
  Delay (1,500,mSec)
  SerialOut(SerialPCO2,CHR(27),"",1,0)
  Delay (1,500,mSec)
  SerialOut(SerialPCO2,"1","",1,0)
  Delay (1,500,mSec)
  SerialOut(SerialPCO2,"s","",1,0)
  SerialFlush(SerialPCO2)
  PCO2_Sampling = true
  PCO2_Last_Sample = Public.TimeStamp(1)
EndSub



Sub CollectPCO2
  SerialIn(RawPCO2,SerialPCO2,10,"Sample Complete",500)
  If RawPCO2_Water = "" Then
    'Search in RawPCO2 where PCO2_Water starts with "W M"
    PCO2WStart = InStr(1,RawPCO2,"W M,",4)
    PCO2WEnd = InStr(PCO2WStart,RawPCO2,CHR(10),2)
    If PCO2WStart <> 0 AND PCO2WEnd <> 0 Then
      'Collect from RawPCO2 to get RawPCO2_Water
      RawPCO2_Water = Mid(RawPCO2,PCO2WStart,PCO2WEnd - PCO2WStart)
    EndIf
  EndIf

  If RawPCO2_Air = "" Then
    'Search in RawPCO2 where PCO2_Air starts with "A M"
    PCO2AStart = InStr(1,RawPCO2,"A M,",4)
    PCO2AEnd = InStr(PCO2AStart,RawPCO2,CHR(10),2)
    If PCO2AStart <> 0 AND PCO2AEnd <> 0 Then
      'Collect from RawPCO2 to get RawPCO2_Water
      RawPCO2_Air = Mid(RawPCO2,PCO2AStart,PCO2AEnd - PCO2AStart)
    EndIf
  EndIf
    
  If RawPCO2_Water <> "" AND RawPCO2_Air <> "" Then 
    PCO2_Sampling = false
    
    SplitStr(PCO2,RawPCO2_Water,",",14,0)
    PCO2_Type = "W M"
    PCO2_Date = PCO2(1)&"-"&PCO2(2)&"-"&PCO2(3)
    PCO2_Time = PCO2(4)&":"&PCO2(5)&":"&PCO2(6)
    CO2_Water = PCO2(9)
    PCO2_Gaz_Pressure_Water = PCO2(13)
    PCO2W_Humidity = PCO2(11)
    
    Call PCO2WTable
      
    SplitStr(PCO2,RawPCO2_Air,",",14,0)
    PCO2_Type = "A M"
    PCO2_Date = PCO2(1)&"-"&PCO2(2)&"-"&PCO2(3)
    PCO2_Time = PCO2(4)&":"&PCO2(5)&":"&PCO2(6)
    CO2_Air = PCO2(9)
    PCO2_Gaz_Pressure_Air = PCO2(11)
    SerialFlush(SerialPCO2)
    SerialClose(SerialPCO2)
    
    Call PCO2ATable

    RawPCO2 = ""
    CO2_Water = "#.#"
    CO2_Air = "#.#"
              
  EndIf 'If there's a water and an air string
EndSub


Sub SamplePCO2 'Move to pco2.cr6 ? TODO
  Dim time_stamp
  If With_PCO2 AND (Salinity > 10 OR Bypass_Salinity) Then 'Security for PCO2 pump if not in water
    time_stamp = Public.TimeStamp(1)
    'minus 10sec to not skip a scan planned at PCO2_Interval hour (got 3599s and didn't sampled)
    WhereAmI = "Start PCO2"
    If (PCO2_Last_Sample + (PCO2_Interval*60*60) - 10 <= time_stamp) AND NOT PCO2_Sampling Then
      ' WhereAmI = "Entering PCO2 Loop"
      Call StartPCO2
    EndIf
    
    If PCO2_Sampling Then
      'Watchdog if there's no data in 1Hour (if power disconnected during sampling)
                          'sec
      If (PCO2_Last_Sample + 3600) < time_stamp Then
        Call EmptyPCO2Table '  Change le nom #jerome July 2023
      Else
        Call CollectPCO2
        If RawPCO2_Water <> "" AND RawPCO2_Air <> "" Then 'TODO FIXME ME: VÃ©rifier avec Anthony. C'est la seule place qui n'envoie pas le tags en cas de NA data ? #jerome July 2023
          TAGString = "[PCO2]" & CO2_Water & "," & CO2_Air & "," & PCO2_Gaz_Pressure_Water & "," & PCO2_Gaz_Pressure_Air & "," & PCO2_Humidity
          Call WriteTagString
        EndIf
      EndIf 'If Else Watchdog TODO
    EndIf 'If PCO2_Sampling is True
  EndIf 'If there's a PCO2 and salinity (or bypass)
EndSub

Sub PCO2RawStringsReset
  If RawPCO2_Air <> "" AND RawPCO2_Water <> "" Then
    RawPCO2_Air = ""
    RawPCO2_Water = ""
  EndIf
EndSub
