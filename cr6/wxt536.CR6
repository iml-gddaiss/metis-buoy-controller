'WXT536 related code

'### Data Variables ###
Dim RawR1_Wind As String * 80
Dim RawR2_Weather As String * 45
Dim RawR3_Rain As String * 75

Dim WXT536_Weather(3) As Float : Alias WXT536_Weather = Air_Temp, Air_Humidity, Air_Pressure
'The wind is Dim because it depends on the presence of WMT700
Dim WXT536_Wind(6) As Float : Alias WXT536_Wind = Dir_Min2, Dir_Ave2, Dir_Max2, Spd_Min2, Spd_Ave2, Spd_Max2
Dim WXT536_Rain(6) As Float : Alias WXT536_Rain = Rain_Total, Rain_Duration, Rain_Intensity, Hail_Total, Hail_Duration, Hail_Intensity


'### Units ###
Units Air_Temp = 째C
Units Air_Humidity = %
Units Air_Pressure = hPa
Units Dir_Min2 = 째
Units Dir_Ave2 = 째
Units Dir_Max2 = 째
Units Spd_Min2 = Kn
Units Spd_Ave2 = Kn
Units Spd_Max2 = Kn
Units Rain_Total = mm
Units Rain_Duration = sec
Units Rain_Intensity = mm/h
Units Hail_Total = mm
Units Hail_Duration = sec
Units Hail_Intensity = mm/h


'### Tables ###
DataTable (FileWXT536,1,-1) 'Set table size to # of records, or -1 to autoallocate.
    DataInterval (0,0,Sec,10)
    Sample (1,Air_Temp,IEEE4)
    Sample (1,Air_Humidity,IEEE4)
    Sample (1,Air_Pressure,IEEE4)
    Sample (1,Dir_Min2,IEEE4)
    Sample (1,Dir_Ave2,IEEE4)
    Sample (1,Dir_Max2,IEEE4)
    Sample (1,Spd_Min2,IEEE4)
    Sample (1,Spd_Ave2,IEEE4)
    Sample (1,Spd_Max2,IEEE4)
    Sample (1,Rain_Total,IEEE4)
    Sample (1,Rain_Duration,IEEE4)
    Sample (1,Rain_Intensity,IEEE4)
    Sample (1,Hail_Total,IEEE4)
    Sample (1,Hail_Duration,IEEE4)
    Sample (1,Hail_Intensity,IEEE4)
EndTable


'### Sampling ###
Sub StartWXT536
    RealTime(Buoy_Time) 'Collecting buoy time to see if it's time to reset the rain/hail accumulation
	'Timer(6,Hr,0) 'Start the timer if it isn't started
	RainReset_Timer = Timer(6,Hr,4)
	    
    Reset Rain if 00:00 or active for more than 24h
	If UTC_Time_DDot = "00:00:00" OR RainReset_Timer >= 24 Then
	    SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZRU"&CHR(13)&CHR(10),"",1,0)
        SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZRI"&CHR(13)&CHR(10),"",1,0)
        Timer(6,Hr,2) 'Timer #6 Reset&Start
    EndIf	
	    
    'Reset wind & weather measurements    
    SerialOut(SerialTower,CHR(13)&CHR(10)&"2XZM"&CHR(13)&CHR(10),"",1,0)    
EndSub


Sub CollectWXT536
    RawR1_Wind = ""
    RawR2_Weather = ""
    RawR3_Rain = ""

    For X = 1 To 3 Step 1
        SerialOut(SerialTower,CHR(13)&CHR(10),0,1,10)
        If RawR1_Wind = "" Then
            SerialOut(SerialTower,"2R1!",0,1,10)
            SerialIn(RawR1_Wind,SerialTower,20,13,80)
            RawR1_Wind = Mid(RawR1_Wind,5,80)
            SplitStr(WXT536_Wind(),RawR1_Wind,",",6,0)
            If WXT536_Wind(6) = "" Then
            RawR1_Wind = ""
            EndIf
    EndIf

    If RawR2_Weather = "" Then
        SerialOut(SerialTower,"2R2!",0,1,10)
        SerialIn(RawR2_Weather,SerialTower,20,13,30)
        RawR2_Weather = Mid(RawR2_Weather,5,30)
        SplitStr(WXT536_Weather(),RawR2_Weather,",",3,0)
        If WXT536_Weather(3) = "" Then
        RawR2_Weather = ""
        EndIf
    EndIf

    If RawR3_Rain = "" Then
        SerialOut(SerialTower,"2R3!",0,1,10)
        SerialIn(RawR3_Rain,SerialTower,20,13,80)
        RawR3_Rain = Mid(RawR3_Rain,5,80)
        SplitStr(WXT536_Rain(),RawR3_Rain,",",6,0)
        If WXT536_Rain(6) = "" Then
        RawR3_Rain = ""
        EndIf
    EndIf

    Next X

    CallTable FileWXT536
EndSub


'### Processing ###