'#####################################################################################
'Date: 04 avril 2023
'Authors: Anthony Ouellet 
'         Jérôme Guay     | jerome.guay@protonmail.com
'
' Last Update: Jan 2024
'
'                           >>> READ THE FOLLOWING <<<
'
'--------------------------------------------------------------------------------------
'--------------------------------- Main Program ---------------------------------------
'--------------------------------------------------------------------------------------
'
' TODO Description of the Program
' - Before Scan
' - Scan
' - SlowScan
'
'######################### Variable/Constant To Configure ############################
' o `buoy_config.CR6`
'   - All Constant in the ConstantTable
' o `emails.CR6`
'   - `email_address`
'   - `sms_address`
' o `Winch.CR6`
' - `SuccesfulWinchMessage`
' - `WinchMaxFileLength`
'
'################################ Flags And Switches ##################################
'  o `slow_sequences.CR6`
'    - `Manual_Tower_Switch` 
'    - `Manual_Well_Switch`
'    - `Start_Winch_Override`
'    - `Send_Break_to_ADCP`
'    - `Deploy_ADCP_Switch`
'    - `Shutdown_ADCP_Switch`
'    - `Send_test_email`
'    - `Reset_Instrument_Warnings_Switch`
'  o `Winch.CR6`
'    - `Winch_Conditions_Bypass`
'  o `emails.CR6`
'    - `Disable_Emails`
'  o `alerts.CR6` 
'    - (See Section Below)
'
'################################# Alerts & Emails ####################################
' Alerts (Alarms and Warnings) are located in the `alerts.CR6 file.
' Emails are handled in the `emails.CR6` file.
' Alerts are defined as Flag (Boolean) public variables.
'
' All emails can be disabled by setting the `Disable_Email` Flag to True.
'  o `Buoy_Adrift_Alert`: 
'    In the `buoy_config.cr6` file set the following Constant:
'       `Latitude_0`: Mooring Anchor Latitude in Degree-Decimal North 
'       `Longitude_0`:Mooring Anchor Longitude in Degree-Decimal East
'      `Allowed_Position_Deviation_m`: From Latitude_0,Longitude_0 in meters
'    Once the alert is set, the buoy is considered adrift until it's resetted to false.
'    Emails will continue to be sent even if the buoy return within the acceptable range.
'    - `Buoy_Adrift_Alert_Snoozed`:
'       Snoozing will only stop the Emails, the buoy is still considere adrift.
'
'  o `Battery_Low_Warning`
'    TODO
'
'  o `Water_Infiltration_Warning`
'    TODO
'
'   o `Winch_Failed_Warning`
'     TODO
'
'  o `Winch_Download_TimedOut_Warning`
'     TODO
'
' Instruments have no public warning variable. If an instrument fails to sample, a warning email 
' is only sent the first time it fails. Each instrument as its own internal warning flags.
' Set the variable `Reset_Instrument_Warnings_Switch` to true to reset all the instrument warning 
' flags.
'
'############################## Instruments List ######################################
'
' [ADCP] Teledyne WorkHorse
'  - Number of Bin: buoy_config.CR6 -> Const ADCP_Num_Bin (Default=27)
' [...]
'
' [WXT536] Vaisala
'  - Rain Reset: buoy_config.CR6 -> Const Rain_Interval_Hr 
'
'######################## Instruments Connections Diagrams ############################
'
' ======================================= Main =======================================
'
'                          +-------------------+
'                          |        CR6        |
'                          | +---+             |
'  +----------+ RS232 (16) | |   |             |
'  + GPS      |<-(U11 U12)-->|   |             |
'  +----------+            | |   |             |
'  +----------+ RS232 (13) | |   |       +---+ |               +---+---+---+---+
'  | Winch    |<-(U05 U06)-->|   |       |   |<----(C1 C2 C3)->| 0 | 4 | 8 | C |
'  +----------+            | |   |       |   | |               +---+---+---+---+
'  +----------+ RS232 (12) | |   |       |   | |               +-------------+
'  | ADCP     |<-(U03 U04)-->|   |       |   |>----(SW12-2)--->| Tower Power |
'  +----------+            | |   |       |   | |               +-------------+
'  +----------+            | |   |       |   | |               +-------------+
'  | WD       |<-(U01)------>|   |       |   |>----(SW12-1)--->| Pump  Power |
'  +----------+            | |   |       |   | |               +-------------+
'                          | +---+       +---+ |
'                          +-------------------+
'
' * WD: Water Dectection
'                            +---+---+
'                            |   | C |
'                            |   +---+
'   +----------+  RS232 (44) |   |
'   | Logging  |<----------->| S |
'   +----------+             | D |
'   +----------+  RS232 (45) | M |                +-----+
'   | Power    |<----------->| - |<--(C1 C2 C3)-->| CR6 |
'   +----------+             | S |                +-----+
'   +----------+  RS232 (46) | I |
'   | Wave     |<----------->| O |
'   +----------+             | 4 |
'                            |   |
'                            +---+
'
' ======================================= Tower =====================================
'  +----------+
'  | WMT700   |<-+
'  +----------+  |              +---+---+
'  +----------+  |   RS485 (32) |   | 0 |
'  | WXT536   |<-+------------->|   +---+
'  +----------+  |              |   |
'  +----------+  |              | S |
'  | Compass  |<-+              | D |
'  +----------+                 | M |                +-----+
'                               | - |<--(C1 C2 C3)-->| CR6 |
'  +----------+     RS232 (33)  | S |                +-----+
'  | PAR      |<--------------->| I |
'  +----------+                 | O |
'  +----------+     RS232 (34)  | 4 |     +-------------+              +-----+
'  |OCR_I     |<--------------->|   |<---<| Tower Power |<--(SW12-2)--<| CR6 |
'  +----------+                 |   |     +-------------+              +-----+
'                               +---+
'
' ======================================= Well =======================================
'                               +---+---+
'                               |   | 4 |
'   +----------+   RS232 (36)   |   +---+
'   | CTD      |<-------------->| S |
'   +----------+                | D |
'   +----------+   RS232 (37)   | M |                +-----+
'   | ECO      |<-------------->| - |<--(C1 C2 C3)-->| CR6 |
'   +----------+                | S |                +-----+
'   +----------+   RS232 (38)   | I |
'   | SeaFet   |<-------------->| O |
'   +----------+                | 4 |
'   +----------+   RS232 (39)   |   |
'   | OCR_R    |<-------------->|   |
'   +----------+                |   |
'                               +---+

'                              +---+---+
'                              |   | 8 |
'    +----------+  RS232 (40)  |   +---+
'    | PCO2     |<------------>| S |
'    +----------+              | D |
'    +----------+  RS232 (41)  | M |                +-----+
'    | SUNA     |<------------>| - |<--(C1 C2 C3)-->| CR6 |
'    +----------+              | S |                +-----+
'                              | I |
'                              | O |
'                              | 4 |
'                              |   |
'                              +---+
'
'############################# Tag Strings ###########################################
' 
' Missing values can be: ("NA", "NAN" , "")
'
' [INIT] Buoy_Name, Date, Time, Latitude, Longitude, Heading, Pitch, Roll, COG, SOG, Magnetic_Variation, Water_Detection_Main
' [POWR] VBatt1, ABatt1, VBatt2, ABatt2, VSolar, ASolar, AMain, ATurbine, AWinch, PM_RH, Relay_State
' [ECO1] Scattering, Chlorophyll, FDOM
' [CTD] Temperature, Conductivity, Salinity, Density
' [PH] Ext_pH_Calc, Int_pH_Calc, Error_Flag, Ext_pH, Int_pH
' [NO2] Dark_Nitrate, Light_Nitrate, Dark_Nitrogen_in_Nitrate, Light_Nitrogen_in_Nitrate, Dark_Bromide, Light_Bromide
' [Wind] Source, Wind_Dir_Min, Wind_Dir_Ave, Wind_Dir_Max, Wind_Spd_Min, Wind_Spd_Ave, Wind_Spd_Max
'                 Source: 7: wmt700,  5: wxt536
' [ATMS] Air_Temp, Air_Humidity, Air_Pressure, PAR, Rain_Total, Rain_Duration, Rain_Intensity
' [WAVE] Wave_Date, Wave_Time, Wave_Period, Wave_Hm0, Wave_H13, Wave_Hmax
' [ADCP] ADCPDate, ADCPTime, EW, NS, Vert, Err
' [PCO2] CO2_Air, CO2_Water, Gas_Pressure_Air, Gas_Pressure_Water, Air_Humidity
' [WNCH]messages
'     messages:
'         Air temperature is too low
'         Waves are too high
'         Wave period is too short
'         Buoy is moving too fast
'         Voltage is too low
'         Mission Completed
'         No Mission in Progress
'         Mission in Progress
'         Mission Started
'         No String received from CTD
'         Interval not reach
' [END]
'#####################################################################################

SequentialMode
AngleDegrees
PreserveVariables

Dim SlowSequenceLocked As Boolean = false

Public ScanTimeStamp(2) As String : Alias ScanTimeStamp = ScanDate, ScanTime

Public TAGString As String * 600 ' TODO fixme check if lengths is ok

' ########## CR6 Scripts Includes (Imports) ##########
' ### Global
Include "CPU:buoy_config.cr6"                   '#   Declare Buoy Config
Include "CPU:emails.cr6"                        '#   Emails
Include "CPU:ports.cr6"                         '#   Define all Serials and Channels
Include "CPU:logging.cr6"                       '#   Logging module
Include "CPU:timers.cr6"                        '#   Timer Values module

' ###  Instruments Sampling
Include "CPU:wmt700.cr6"
Include "CPU:wxt536.cr6"
Include "CPU:compass.cr6"
Include "CPU:gps.cr6"
Include "CPU:par.cr6"
Include "CPU:SBE37.cr6"
Include "CPU:eco_triplet.cr6"
Include "CPU:seafet.cr6"
Include "CPU:suna.cr6"
Include "CPU:pco2.cr6"
Include "CPU:ocr.cr6"
Include "CPU:wave.cr6"
Include "CPU:power_controller.cr6"
Include "CPU:adcp.cr6"
Include "CPU:winch.cr6"

Include "CPU:tower.cr6"
Include "CPU:water_detection.cr6"
Include "CPU:well_pump.cr6"

' ### Processing
Include "CPU:weather.cr6"    ' Build Wind-Atms tables and Wind-Atms-PAR Tag Strings from WMT, WXT and PAR.

' ### Slow Sequences | User Command Interface
Include "CPU:slow_sequences.cr6"
Include "CPU:alerts.cr6"

' ########## DataTable Defintions ##########
DataTable (FileRaw,1,-1) ' This need to be declared after the instrument script imports
  DataInterval(0,0,Sec,10)
  Sample (1,RawWXT536_Wind,String)
  Sample (1,RawWXT536_Weather,String)
  Sample (1,RawWXT536_Rain,String)
  Sample (1,RawWMT700,String)
  Sample (1,RawGPS,String)
  Sample (1,RawPAR,String)
  Sample (1,RawWave,String)
  Sample (1,RawPower,String)
  Sample (1,RawSBE37,String)
  Sample (1,RawTriplet,String)
  Sample (1,RawSeafet,String)
  Sample (1,RawSUNADark,String)
  Sample (1,RawSUNALight,String)
  Sample (1,RawPCO2_Water,String)
  Sample (1,RawPCO2_Air,String)
  Sample (1,WinchMessage,String)
EndTable

DataTable (FileTAGS,1,-1) ' fixme change name
  DataInterval(0,0,Sec,10)
  Sample (1, TAGString, String)
EndTable

' ########## Tag String Functions ##########
Function InitTagString as String * 200 ' may be too much, but maybe not FIXME
  InitTagString = "[INIT]" & Buoy_Name & "," & ScanDate & "," & ScanTime & "," & Latitude & "," & Longitude & "," & Heading & "," & Pitch & "," & Roll & "," & COG & "," & SOG & "," & Magnetic_Variation & "," & Water_Detection_Main
EndFunction

Function EndTagString as String * 5
  EndTagString = "[END]"
EndFunction

' ########## Update Flags and Raw String Reset Routine ##########
Sub ResetTablesUpdateFlag
  UpdateGPSTable = false
  UpdateCompassTable = false
  UpdatePowerTable = false
  UpdateTripleTable = false
  UpdateHyperOCRTable = false
  UpdateSBE37Table = false
  UpdateSeafetTable = false
  UpdateSUNATable = false
  UpdatePARTable = false
  UpdateWXT536Table = false
  UpdateWMT700Table = false
  UpdateWeatherTable = false
  UpdateWaveTable = false
  UpdateADCPTable = false
  UpdatePCO2Tables = false
EndSub

Sub ResetRawStrings
  ' Safety, if an instrument is disabled, the last string will not propagate.
  RawWXT536_Wind = ""
  RawWXT536_Weather = ""
  RawWXT536_Rain = ""
  RawWMT700 = ""
  RawGPS = ""
  RawPAR = ""
  RawWave = ""
  RawPower = ""
  RawSBE37 = ""
  RawTriplet = ""
  RawSeafet = ""
  RawSUNADark = ""
  RawSUNALight = ""

  Call ResetPCO2RawStrings
EndSub

' ########## Date Time Handling SubRoutines ##########
Sub GetScanDateTime
  SplitStr(ScanTimeStamp, Public.TimeStamp(4,0), " ", 2, 5) ' ScanTimeStamp = (ScanDate, ScanTime)
  ScanTime = Mid(ScanTime, 1, 8) ' discarting micro-seconds.
  Call logging("Scan TimeStamp: " & ScanDate &"T"& ScanTime)
EndSub

Sub GPSTimeAjustment
  If With_GPS AND GPS_Date <> "" AND GPS_Time <> "" Then
    ClockSet(GPS_Date &" "& GPS_Time)
    Call logging("Update Buoy Clock with GPS")
  EndIf
EndSub

'>>>>>>>>>>>>>>>>>>>> MAIN PROGRAM BEGINS HERE <<<<<<<<<<<<<<<<<<<<

BeginProg
  SetSetting("WIFIconfig",4) 'This is turning the Wifi Off

  Call logging("Program Started.")

  Call CloseSerialPorts

  Call StartADCP

  Call StartRainTimer

  Scan(Buoy_Interval_Min,Min,0,0)

  Call logging("Scan Start")

  SlowSequenceLocked = True ' Lockling Slow Sequence

  Call GetScanDateTime

  Call InitTmpLogFile

  Call PowerWaterDetectionMain

  Call PowerTowerInstruments ' PAR, WMT700, Compass, With_OCR_I. Start Tower_Timer

  Call StartPAR

  Call StartTower485         ' WXT536, WMT700, Compass

  Call SampleGPS             ' GPS samples for 10s. Gives time to other tower instrument to initialize.

  Call Buoy_Adrift_Check

  Call GPSTimeAjustment

  Call ResetWXT536

  Call StartWMT700           ' Slow to start

  Call StartWeatherTimer

  Call SBE37SalinityCheck ' Skipped if BypassSalinity is true.

  Call PowerWellPump        ' Power Well Pump and Start Well Timer.

  Call StartTriplet         ' Starts Triplet_Timer

  Call SampleCompass        ' Requires GPS Magnetic Declination

  Call CheckWaterDectectionMain

  TAGString = InitTagString()             'Requires Gps, Compass and WaterDectection Variables.

  Call SamplePowerController

  Call CollectTriplet

  ' ### Well Pump InstrumentTower ###
  Call WaitForWellPump   ' Well Instrument that required SBE37, Seafet, SUNA, OCR_R (Sensor Conditionning).
  Call StartSUNA         ' why don't isn't SUNA started in THE begining --- FIXME ---
  Call SampleOCRs
  Call SampleSBE37
  Call SampleSeafet(SBE37_Temperature, SBE37_Salinity)
  Call CollectSUNA
  Call StopWellPump

  ' ### Tower Instruments ##
  Call WaitForWeather        ' Tower Instrument that required to sample over time
  Call CollectPAR
  Call CollectWXT536
  Call CollectWMT700
  Call StopTower485

  Call ProcessWeather(Heading)

  Call SampleWave

  Call CollectADCP

  Call PCO2Routine

  Call logging("Scan Sampling Done.")

  Call WinchRoutine

  Call logging("Closing serial ports.")

  Call CloseSerialPorts

  ' ### Updating Table Files ### ' Each Table is define with an update Condition.
  Call logging("Updating Tables.")
  CallTable FileGPS
  CallTable FileCompass
  CallTable FilePower
  CallTable FileTriplet
  CallTable FileHyperOCR
  CallTable FileSBE37
  CallTable FileSeafet
  CallTable FileSUNA_Light
  CallTable FileSUNA_Dark
  CallTable FilePAR
  CallTable FileWXT536
  CallTable FileWMT700
  CallTable FileWeather
  CallTable FileWave
  CallTable FileADCP
  CallTable FilePCO2A
  CallTable FilePCO2W
  CallTable FileRaw

  Call ResetRawStrings

  Call ResetTablesUpdateFlag

  TAGString &= EndTagString()
  CallTable FileTAGS

  Call CollectWinch

  TriggerSequence(1,0) ' Unlocking Slow Sequence

  Call logging("Scan Done" & CHR(13) & CHR(10)) ' double new line to separate the san in the loggings.

  If SaveLog Then
    Call CopyTmpLogFile
    SaveLog = False
  EndIf

  NextScan

  SlowSequence
    Do
      If SlowSequenceLocked Then
        Call logging("Slow Sequence Locked")
        WaitTriggerSequence
        SlowSequenceLocked = false
        Call logging("Slow Sequence Unlocked")
      EndIf

      Call TowerSwitchSequence
      Call WellSwitchSequence
      
      Call WinchStartSequence
      
      Call ADCPBreakSequence
      Call ADCPDeploySequence
      Call ADCPShutdownSequence

      Call Reset_Instrument_Warnings
      Call EmailTestSequence
      Delay(1,1,Sec)
    Loop
EndProg
