'compass related code
'### Serial Port ###


'### Data Variables ###

Dim RawCompass(9) As String
Dim Heading_Vec(2) As Float : Alias Heading_Vec = Heading_x, Heading_y
Public Compass(3) As Float : Alias Compass = Heading, Pitch, Roll
Units Heading = °
Units Pitch = °
Units Roll = °


'### Units ###


'### Tables ###
DataTable (FileCompass,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,Heading,String)
  Sample (1,Pitch,String)
  Sample (1,Roll,String)
EndTable


Sub CompassTable
  Scan(1,Sec, 0, 1)
  CallTable FileCompass
  NextScan
EndSub

'######################################### Change this with proper Timer +++++++++++++++++++++++++++++++++++++++++++++++++
Sub CheckCompassTimer 
  Dim CompassTimer
  CompassTimer = Timer(7,Sec,4)
  
  If CompassTimer < 4 Then
    Delay(1,4-CompassTimer,Sec)
  EndIf
EndSub

'### Sampling ###
Sub ResetCompassValues(SerialTower)
  'Resetting the compass & Heading values
  Compass() = 0 'Compass(3) = Heading, Pitch, Roll
  Heading_Vec() = 0 'Heading_Vec(2) = Heading_x, Heading_y
  SerialOut(SerialTower,"h"&CHR(04)&CHR(01)&CHR(04)&CHR(09),"h",3,50)
EndSub


Function HexaSign(RawSign) as String * 1
  Select Case RawSign
    Case 10
      HexaSign = "+"
    Case Else
      HexaSign = "-" 
  EndSelect
EndFunction


Sub CollectCompass60s(SerialTower)
  Dim X, Y
  Dim ASCIIString As String * 100
  Dim HeadingBuff 
  For Y = 1 To 60
    SerialOut(SerialTower,"h"&CHR(04)&CHR(01)&CHR(04)&CHR(09),"h",1,50)  ' Command = h^D^A^D^I (68 04 01 04 09)
    SerialInRecord(SerialTower,ASCIIString,&H68,13,0,NBR,101)   ' First byte sent is address 68
    
    If ASCIIString = "NAN" Then
      Pitch = "NAN"
      Roll = "NAN"
      Heading = "NAN"
      ExitFor ' FIXME exiting for loops seems dangerous ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    EndIf        

    For X = 4 To 12                                      ' Setting each HEX byte in RawCompass Array
      RawCompass(X-3) = Hex(ASCII(ASCIIString(1,1,X)))   ' Received message looks like 68 0D 01 84 00 11 22 10 33 44 05 66 77 99
    Next X                                               '                             ID LG AD MS (- Roll) (+Pitch) ( Head ) CHK
            
    If Len(RawCompass(8)) = 1 Then
      RawCompass(8) = "0" + RawCompass(8)
    EndIf

    'Array are in order of Roll, Pitch & Heading
    Roll = Roll + CTYPE(HexaSign(RawCompass(1)) & RawCompass(2) & "." & RawCompass(3), Float)
    Pitch = Pitch + CTYPE(HexaSign(RawCompass(4)) & RawCompass(5) & "." & RawCompass(6), Float)
    HeadingBuff = CTYPE(RawCompass(7) & RawCompass(8) & "." & RawCompass(9), Float)
    Heading_x = Heading_x + COS(HeadingBuff)
    Heading_y = Heading_y + SIN(HeadingBuff)
    Delay(1,400,mSec)
    
  Next 'Next sample (Y = 1 to 60)
EndSub


Sub AverageCompass(Roll, Pitch, Heading, Heading_y, Heading_x)
  'Making the average of the 60 measurement.
  'Since the Heading is vectorial, no need to divide by 60
  'ÃƒÅ½Ã‚Â¸ = atan(opp/adj) is same as ÃƒÅ½Ã‚Â¸ = atan((opp/60)/(adj/60))
  Roll = Round(Roll/60,2)
  Pitch = Round(Pitch/60,2)
  Heading = ATN2(Heading_y, Heading_x)
EndSub


Sub ApplyMagneticCorrection(Heading, Mag_Var)
  Heading = Heading + Mag_Var
  If Heading >=  360 Then
    Heading = Heading - 360
  ElseIf Heading < 0 Then
    Heading = Heading + 360
  EndIf
  Heading = Round(Heading,2)
EndSub


Sub SampleCompass(SerialTower)
  If With_Compass <> 0 Then
    WhereAmI = "Sample Compass"   
    
    Call CheckCompassTimer
    
    Call ResetCompassValues(SerialTower)
    
    Call CollectCompass60s(SerialTower)
      
    Call AverageCompass(Roll, Pitch, Heading, Heading_y, Heading_x)

    Call ApplyMagneticCorrection(Heading, Mag_Var)

    Call CompassTable
    
    WhereAmI = "End Compass"
  EndIf
EndSub






