Dim WindTAG As String


' Weather manipulation with selection of better wind and compensation

Dim Wind(6) As Float : Alias Wind = Wind_Dir_Min, Wind_Dir_Ave, Wind_Dir_Max, Wind_Spd_Min, Wind_Spd_Ave, Wind_Spd_Max
Units Wind_Dir_Min = °
Units Wind_Dir_Ave = °
Units Wind_Dir_Max = °
Units Wind_Spd_Min = Kn
Units Wind_Spd_Ave = Kn
Units Wind_Spd_Max = Kn

DataTable (Weather,1,-1)
  DataInterval (0,0,Sec,10)
  Sample (1,Air_Temp,IEEE4)
  Sample (1,Air_Humidity,IEEE4)
  Sample (1,Air_Pressure,IEEE4)
  Sample (1,Wind_Dir_Min,IEEE4)
  Sample (1,Wind_Dir_Ave,IEEE4)
  Sample (1,Wind_Dir_Max,IEEE4)
  Sample (1,Wind_Spd_Min,IEEE4)
  Sample (1,Wind_Spd_Ave,IEEE4)
  Sample (1,Wind_Spd_Max,IEEE4)
  Sample (1,Rain_Total,IEEE4)
  Sample (1,Rain_Duration,IEEE4)
  Sample (1,Rain_Intensity,IEEE4)
  Sample (1,Hail_Total,IEEE4)
  Sample (1,Hail_Duration,IEEE4)
  Sample (1,Hail_Intensity,IEEE4)
EndTable


Function WindTagString as String
  WindTagString = WindTAG & Wind_Dir_Min & "," & Wind_Dir_Ave & "," & Wind_Dir_Max & "," & Wind_Spd_Min & "," & Wind_Spd_Ave & "," & Wind_Spd_Max ' (had flag for motion correction)
EndFunction


Function ATMSTagString as String
  ATMSTagString = "[ATMS]" & Air_Temp & "," & Air_Humidity & "," & Air_Pressure & "," & PAR & "," & Rain_Total & "," & Rain_Duration & "," & Rain_Intensity
EndFunction


Sub UpdateWeatherTable
  Scan(1,Sec, 0, 1)
  CallTable Weather
  NextScan
EndSub


Sub StartATMSTimer 'Weather and PAR
  'Start Timer#1 to collect data in 61sec
  If With_ATMS Then
    Timer(ATMS_Timer, Sec, 2)
  EndIf
EndSub


Sub WaitForATMS 'Weather and PAR
  If With_ATMS Then
    Call TimerDelay_Sec(ATMS_Timer, 61)
  EndIf 
EndSub


Sub SelectWeatherInstrument
  If WMT700(5) = CHR(00) OR WMT700(5) = 0 Then  ' If there's data from WMT700, taking them as Wind
    Wind() = WXT536_Wind()
    WindTAG = "[W536]"                    ' Otherwise take the WXT536
  Else                                    '
    Wind() = WMT700()
    WindTAG = "[W700]"                    '
  EndIf         
EndSub


Sub AverageWindMotionCorrection(GPS_SOG_X, GPS_SOG_Y)
  Dim XY(2) As Float, RhoTheta(2) As Float
  'Only for the average wind.
  If GPS_SOG_X <> "NAN" AND GPS_SOG_Y <> "NAN" ' Fixme How can it equal to NAN
    logging("Carrying average wind motion correction")
    'Wind(2): Wind_Dir_Ave
    'Wind(4): Wind_Spd_Ave

    XY(1) = Wind(4) * SIN(Wind(2)) + GPS_SOG_X
    XY(2) = Wind(4) * COS(Wind(2)) + GPS_SOG_Y
    RectPolar(RhoTheta, XY)

    Wind(4) = RhoTheta(1)
    Wind(2) = RhoTheta(2)
  EndIf
EndSub


Sub WindCorrection(GPS_SOG_X, GPS_SOG_Y)
  Dim X
  'Heading correction
  For X = 1 To 3                                   ' with the heading (which is already corrected with magnetic
    Wind(X) = Round(Wind(X) + Heading MOD 360, 2)  ' declinaison from the GPS
  Next
  
  If Wind_Motion_Correction Then
    Call AverageWindMotionCorrection(GPS_SOG_X, GPS_SOG_Y)
  EndIf
EndSub


Sub ProcessWeather(TAGString, GPS_SOG_X, GPS_SOG_Y)
  If With_Weather AND With_GPS AND Pitch <> "NAN" AND Roll <> "NAN" Then 
    WhereAmI = "Processing Weather"
    Call SelectWeatherInstrument   

    Call WindCorrection(GPS_SOG_X, GPS_SOG_Y)
    
    Call UpdateWeatherTable

    TAGString = WindTagString()
    Call WriteTagString
    
    TAGString = ATMSTagString()
    Call WriteTagString
    WhereAmI = "Finish Weather"
  EndIf
EndSub
