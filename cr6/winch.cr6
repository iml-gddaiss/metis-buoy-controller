'Winch related code
'### Serial Port ###
' Const SerialWinch = 13 'U5-U6


'### Data Variables ###
Const Min_Air_Temp_for_Winch = 1
Const Max_Wave_H13_for_Winch = 2
Const Min_Wave_Period_for_Winch = 6
Const Max_Flow_for_Winch = 1
Const Max_Buoy_Speed_for_Winch = 1
Const Min_Voltage_for_Winch = 12.2

Public OnWhichBattery ' On?Winch?Battery
Public WinchMessage As String * 50
Public WinchMissingCondition As Long
Public Winch_Voltage As Float
Public Winch_Last_Sample As Long
Public WinchString As String * 50
Public WinchFileName As String * 50

Public WinchStatus as String * 10 'Standby / Sampling / Completed

Dim Winch_Start_RecNum as Long

Dim WinchFile As Long

'### Units ###
'### Tables ###
'### Sampling ###


Sub WinchAirCheck(Air_Temp)
    If Air_Temp < Min_Air_Temp_for_Winch Then
        WinchMissingCondition += 1
        WinchMessage = "The air temperature is too cold"
    EndIf
EndSub

Sub WinchWaveCheck(Wave_H13, Wave_Period)
    If Wave_H13 > Max_Wave_H13_for_Winch Then
        WinchMissingCondition += 1
        WinchMessage = "Average wave is too high"
    EndIf
        
    If Wave_H13 > 1 AND Wave_Period < Min_Wave_Period_for_Winch  AND Wave_Period <> 0 Then
        WinchMissingCondition += 1
        WinchMessage = "Wave period is too short"
    EndIf
EndSub

Sub WinchGPSCheck(SOG)
    If SOG > Max_Buoy_Speed_for_Winch Then
        WinchMissingCondition += 1
        WinchMessage = "The buoy is moving too fast"
    EndIf
EndSub

Sub WinchPowerCheck(VBatt1, VBatt2)
    OnWhichBattery = Mid(PowerString(11),4,1)
    If OnWhichBattery = 1 Then
        Winch_Voltage = VBatt1
   ElseIf OnWhichBattery = 2 Then
        Winch_Voltage = VBatt2
    EndIf
    
    If Winch_Voltage < Min_Voltage_for_Winch Then
        WinchMissingCondition += 1
        WinchMessage = "The Winch voltage is too low"
    EndIf
EndSub

Sub WinchConditionsCheck
    WinchMissingCondition = 0
    
    If With_WXT536 Then
      Call WinchAirCheck(Air_Temp)
    EndIf
    
    If With_Wave Then
      Call WinchWaveCheck(Wave_H13, Wave_Period) 
    EndIf
          
    If With_GPS Then
      Call WinchGPSCheck(SOG)
    EndIf
    
    If With_Power Then
      Call WinchPowerCheck(VBatt1, VBatt2)
    EndIf
EndSub

Sub CheckWinchStatus 'Should it be started earlier ?? 'Should it be close afterward
    SerialOpen(SerialWinch,19200,3,20,100) 'Should it be started earlier ??
    SerialFlush(SerialWinch)
    Delay(1,500,mSec)
    SerialIn(WinchString,SerialWinch,100,10,60)

    If WinchString = "" Then
        If WinchStatus = "Sampling"
            WinchStatus = "Completed"
            WinchMessage = "Winch Completed"
        Else
            WinchMessage = "No Winch in Progress"
        EndIf
    Else
        WinchMessage = "Winch in Progress"
    EndIf
EndSub

Sub StartWinchMission
    SerialOpen(SerialWinch,19200,3,20,100) 'Should it be started earlier ?? 'Should it be close afterward
    SerialOut(SerialWinch,CHR(13),"",1,0)
    SerialOut(SerialWinch,"p1"&CHR(13)&CHR(10),.,2,300)
    Delay(1,2,Sec)
    SerialFlush(SerialWinch)
    SerialIn(WinchString,SerialWinch,100,10,100)
    SerialOut(SerialWinch,"p0"&CHR(13)&CHR(10),.,2,300)

    If Mid(WinchString,1,3) = "[S]" Then 'If [S] is received from CTD -> winch has started
            SerialOut(SerialWinch,"X"&CHR(13)&CHR(10),"[W]1B>Operation Complete",2,200)
            SerialOut(SerialWinch,"R"&CHR(13)&CHR(10),"[W]09>Top Switch Activated",3,1000)
            SerialOut(SerialWinch,"K"&CHR(13)&CHR(10),"[W]13>Lenght Manually Cleared",2,200)
            SerialOut(SerialWinch,"Y"&Depth_for_Winch&CHR(13)&CHR(10),CHR(13),1,0)
            
            WinchStatus = "Sampling"

            Winch_Last_Sample = Public.TimeStamp(1)
            Winch_Start_RecNum = Status.Record

            WinchMessage = "Winch Mission Started"
    Else 'No string from CTD
            WinchMessage = "No String received from CTD" 'and ????
    EndIf
EndSub


Sub WinchMission(Salinity)
    'Start a Winch Mission if its not started and possible.
    If With_Winch AND (SBE37_In_Saltwater OR Bypass_Salinity) Then
               
        WhereAmI = "Entering the Winch Block"

        Call CheckWinchStatus
        
        If WinchStatus = "Standby" Then
            If (Winch_Last_Sample + Winch_Interval_Hr*3600 - 60) <= Public.TimeStamp(1) Then   'minus 60sec to not skip a scan planned at Winch_Interval hour (got 3599s and didn't sampled)
                WhereAmI = "Starting A Winch"

                Call WinchConditionsCheck

                If WinchMissingCondition = 0 Then
                    Call StartWinchMission
                EndIf  
            Else
                WinchMessage = "Interval not reach"
            EndIf
        EndIf
    
        TAGString = "[WNCH]" + WinchMessage
        Call WriteTagString
    EndIf
EndSub


Sub CollectWinch
    Dim Winch_Date As String
    Dim Winch_Time As String
    Dim Winch_Lat As String
    Dim Winch_Long As String

    Call CheckWinchStatus
    
    If WinchStatus = "Completed" Then
        WinchStatus = "Standby"
        
        WhereAmI = "Collecting the winch"
        
        Winch_Date =  FileGPS.UTC_Date_Slash(1, status.Record - Winch_Start_RecNum)
        Winch_Time = FileGPS.UTC_Time_DDOT(2, status.Record - Winch_Start_RecNum)
        Winch_Lat = FileGPS.Latitude(3, status.Record - Winch_Start_RecNum)
        Winch_Long = FileGPS.Longitude(4, status.Record - Winch_Start_RecNum)

        WinchFileName = Buoy_Name&"_"&Replace(Winch_Date, "/", "")&"_"&Replace(Winch_Time, ":", "")
        WinchFile = FileOpen("CRD:WDATA_"&WinchFileName&".txt","a",-1)

        
        FileWrite(WinchFile,Winch_Time&" "&Winch_Date&CHR(10),0)
        FileWrite(WinchFile,Buoy_Name&CHR(10),0)     
        FileWrite(WinchFile,Winch_Lat&","&Winch_Long&CHR(10),0)    
        FileWrite(WinchFile,"D"&CHR(10),0)
        
        SerialOpen(SerialWinch,19200,3,20,100) 'Should it be started earlier ??
        SerialFlush(SerialWinch)
        SerialOut(SerialWinch,"D"&CHR(13)&CHR(10),0,1,0)
        
        Do 
            WinchString = ""
            SerialIn(WinchString,SerialWinch,300,10,60)
            FileWrite(WinchFile,WinchString,0)
        Loop While WinchString <> ""
        
        SerialClose(SerialWinch)
        
        WhereAmI = "Out of Do.. While Loop after winch"
        WinchString = ""
        FileClose(WinchFile)
        
    EndIf
EndSub
