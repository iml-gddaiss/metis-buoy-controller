'wmt700 related code
'### Data Variables ###
Dim RawWMT700 As String * 80
Dim WMT700(6) As Float : Alias WMT700 = Dir_Min_700, Dir_Ave_700, Dir_Max_700, Spd_Min_700, Spd_Ave_700, Spd_Max_700

Dim UpdateWMT700Table As Boolean = false

'### Units ###
Units Dir_Min_700 = °
Units Dir_Ave_700 = °
Units Dir_Max_700 = °
Units Spd_Min_700 = Kn
Units Spd_Ave_700 = Kn
Units Spd_Max_700 = Kn

'### Tables ###
DataTable (FileWMT700,UpdateWMT700Table,-1)
	DataInterval (0,0,Sec,10)
  Sample (1,Dir_Min_700,IEEE4)
  Sample (1,Dir_Ave_700,IEEE4)
  Sample (1,Dir_Max_700,IEEE4)
  Sample (1,Spd_Min_700,IEEE4)
  Sample (1,Spd_Ave_700,IEEE4)
  Sample (1,Spd_Max_700,IEEE4)
EndTable


'### Sampling ###
Sub StartWMT700  
  If With_WMT700 Then
    Call TimerDelay_Sec(Tower_Timer, WMT700_Delay_Sec)
    SerialOut(SerialTower,"$Ameas,1"&CHR(10),"",1,0)
  EndIf
EndSub


Sub CollectWMT700
  Dim NBR ' Number of Bytes Returned
  '&H0DA -> WM | &H0DA0 -> \r\n  (CR)(CF)
  '&H0D0A is the hexadecimal representation for carriage return/line feed
  If With_WMT700 Then
    Call logging("Collect WMT700")

    WMT700() = ""

    SerialOut(SerialTower,"$Apoll,1"&CHR(13)&CHR(10),"Sx",1,100) 
    SerialInRecord(SerialTower,RawWMT700,&H574D,0,&H0D0A,NBR,101)  '  poll,1 is the WMT700 wind, Sx is the last data sent
    SerialOut(SerialTower,"$Asleep"&CHR(13)&CHR(10),"",1,0)

    RawWMT700 = Mid(RawWMT700,7,80)    ' Removing the 6 first digit to pass the numerical value for the type of SplitStr

    Call logging("Raw WMT700: " & RawWMT700) 
    
    If RawWMT700 = "AN" Then
      RawWMT700 = "NAN"
    EndIf

    If RawWMT700 = "" Then
      Call Failed_Sampling_Warning("WMT700")
    Else
      SplitStr(WMT700(),RawWMT700,",",6,10)
    EndIf

    UpdateWMT700Table = true

    Call logging("WMT700 Done")
  EndIf
EndSub
