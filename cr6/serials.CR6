' Water Detectuin Channel is declared in water_detection.CR6

'Const SerialLogging = 1 ' RS232 CPI
Const SerialADCP = 12 'U3-U4 | If ADCP port is not between 11 and 16, Modify the ClosePorts functions to keep ADCP open.

Const SerialWinch = 13 'U5-U6

Const SerialGPS = 16 'U11-U12 (trouble with GPS on SDM)

'## Address 4 ?##
Const SerialTower = 32 'RS485 As WMT700(A), WXT536(2) & Compass(1)
Const SerialPAR = 33 'RS232
Const SerialOCRI = 34
' 35

'## Address 4 ##
Const SerialSBE37 = 36 '36 'RS232
Const SerialTriplet = 37 'RS232
Const SerialSeafet = 38 'RS232
Const SerialOCRR = 39 'RS232
'## -------  ##

'## Address 8 ##
Const SerialPCO2 = 40 'RS232 | If ADCP port is not between 32 and 47, Modify the ClosePorts functions to keep PCO2 open
Const SerialSUNA = 41 'RS232
' 42
' 43
'## -------  ##

'## Address 8 ##
Const SerialLogging = 44 ' Doesn't Compile if a BreakSignal is sent to serial 44.
Const SerialPower = 45 'RS485
Const SerialWave = 46 'RS232
' 47 Does Not Exist
'## -------  ##

'## CHANNELS IO ##
Const Water_Detection_Channel = U1 'Voltage reading


Sub CloseCR6SerialPorts
  Dim port
  'Close all serial port on CR6 if still open except ADCP
  For port = 11 To 16 Step 1
    If port = SerialADCP Then
      'Do not close the ADCP port
    Else If port = SerialWinch And WinchStatus <> "Standby" Then
      'Do not close port
    Else
      SerialClose(port)
    EndIf
  Next port
EndSub

Sub CloseSDM4SerialPorts
  Dim port
  'Close all serial port on SDM4, except for PCO2 (40) which must stays on is PCO2 is sampling
  For port = 32 To 47 Step 1
    If port = SerialPCO2 AND PCO2IsSampling Then
    'Do not close the port
    Else
      SerialClose(port)
    EndIf
  Next port
EndSub

Sub CloseSerialPorts
    Call CloseCR6SerialPorts
    Call CloseSDM4SerialPorts
EndSub
