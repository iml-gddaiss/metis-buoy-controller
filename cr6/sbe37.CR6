' SBE37 related code
'### Serial Port ###
' Const SerialSBE37 = 36 'RS232

'### Data Variables ###
Dim RawSBE37 As String * 40
Const SBE37_RawSample_Length = 38

Public SBE37_In_Saltwater As Boolean = false
Public SBE37(4) As Float : Alias SBE37 = Water_Temp,Conductivity,Salinity,Density

'### Units ###
Units Water_Temp = °C
Units Conductivity = S/m
Units Salinity = PSU
Units Density = Kg/m³


'### Tables ###
DataTable (FileSBE37,1,-1) 
	DataInterval (0,0,Sec,10)
  Sample (1,Water_Temp,IEEE4)
  Sample (1,Conductivity,IEEE4)
  Sample (1,Salinity,IEEE4)
  Sample (1,Density,IEEE4)
EndTable


Sub UpdateSBE37Table
  Scan(1,Sec, 0, 1)
  CallTable FileSBE37
  NextScan
EndSub


Function SBE37TagString as String
  SBE37TagString = "[CTD]" & Water_Temp & "," & Conductivity & "," & Salinity & "," & Density
EndFunction

Sub StartSBE37
  Call logging("Starting SBE37")
  SerialOpen(SerialSBE37,19200,3,20,50) 'CTD string is 38 char.
  SerialFlush(SerialSBE37) 
EndSub


Sub SBE37SalinityCheck
  Dim X
  Dim RawSBE37_Test As String * 40
  Dim SBE37_Test(4) as Float

  SBE37_In_Saltwater = false                 ' Could be in the With_SBE37 block. but its a safety ?
  
  If With_SBE37 Then
    WhereAmI = "SBE37 Salinity Check"
    Call logging("SBE37 Salinity Check")
    
    RawSBE37_Test = ""
    SBE37() = "" ' FIXME 0 or ""
    
    Call StartSBE37
    
    For X = 1 To 3 Step 1
      SerialOut(SerialSBE37,CHR(13),"S>",1,50)          ' Contact SBE37, expect `S>`
      SerialOut(SerialSBE37,"ts"&CHR(13),CHR(10),1,50)  ' Send: `Take, Send` sample command.
      SerialIn(RawSBE37_Test,SerialSBE37,400,13,120) 
      SplitStr(SBE37_Test, RawSBE37_Test,",",4,0)
      
      Call logging("SBE attempt: " & X)
      Call logging("RawSBE37: `" & RawSBE37_Test & "`")
      
      If SBE37_Test(3) > Required_Salinity AND Len(RawSBE37_Test) = SBE37_RawSample_Length Then
        SBE37_In_Saltwater = true
        'Call logging("SBE37_In_Saltwater: " & SBE37_In_Saltwater)
        'SerialClose(SerialSBE37)
        'ExitSub 
        ExitFor
      EndIf
    Next X
    
    
    Call logging("SBE37_In_Saltwater: " & SBE37_In_Saltwater)
    SerialClose(SerialSBE37)
  EndIf  
EndSub


Sub CollectSBE37
  Dim X
  Call logging("Collecting SBE37")
  RawSBE37 = ""
  SBE37() = ""

  For X = 1 To 3 Step 1
    
    SerialOut(SerialSBE37,CHR(13),"S>",1,50)            ' Contact SBE37, expect `S>`
    
    If X = 1 Then
      SerialOut(SerialSBE37,"tss"&CHR(13),CHR(10),1,50) ' Send: `Take, Store, Send` sample Command.
    Else                                                
      SerialOut(SerialSBE37,"sl"&CHR(13),CHR(10),1,50)  ' Send: `Send Last` command
    EndIf
    
    SerialIn(RawSBE37,SerialSBE37,400,13,60)
    SplitStr(SBE37,RawSBE37,",",4,0)

    Call logging("SBE attempt: " & X)
    Call logging("RawSBE37: `" & RawSBE37 & "`")
    
    If Len(RawSBE37) = SBE37_RawSample_Length AND SBE37(4) <> "" Then ' Check String length and that at least values were sent.
      ExitFor
    EndIf
  
  Next X
  Call logging("SBE37 Collected")
EndSub



'### Sampling ###

Sub SampleSBE37(TAGString)
  ' If the data were not received after sending the `tss` command,
  ' we assume that the CTD has received the `tss` command thus, we send 
  ' the `sl` command. Otherwise the ctd internal storage will have duplicate sample.
  If With_SBE37 Then
    WhereAmI = "Sampling SBE37"
    Call logging("Sampling SBE37")
    
    Call StartSBE37

    Call CollectSBE37
      
    SerialClose(SerialSBE37) ' For some Reason, this is problematic ??? 
    ' It hangs at the first `Scan` of the Update SBE37Table. 

    Call UpdateSBE37Table
  
    TAGString = SBE37TagString()
    Call WriteTagString
    WhereAmI = "SBE37 Sampling finished"
    Call logging("SBE37 Sampled")
  EndIf
  
EndSub
