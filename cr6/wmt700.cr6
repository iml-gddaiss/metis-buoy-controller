'wmt700 related code
'### Data Variables ###
Dim RawWMT700 As String * 80
Dim WMT700(6) As Float : Alias WMT700 = Dir_Min1, Dir_Ave1, Dir_Max1, Spd_Min1, Spd_Ave1, Spd_Max1

Dim UpdateWMT700Table As Boolean = false

'### Units ###
Units Dir_Min1 = °
Units Dir_Ave1 = °
Units Dir_Max1 = °
Units Spd_Min1 = Kn
Units Spd_Ave1 = Kn
Units Spd_Max1 = Kn

'### Tables ###
DataTable (FileWMT700,UpdateWMT700Table,-1)
	DataInterval (0,0,Sec,10)
  Sample (1,Dir_Min1,IEEE4)
  Sample (1,Dir_Ave1,IEEE4)
  Sample (1,Dir_Max1,IEEE4)
  Sample (1,Spd_Min1,IEEE4)
  Sample (1,Spd_Ave1,IEEE4)
  Sample (1,Spd_Max1,IEEE4)
EndTable


'### Sampling ###
Sub StartWMT700  
  If With_WMT700 Then
    Call TimerDelay_Sec(Tower_Timer, WMT700_Delay_Sec)
    SerialOut(SerialTower,"$Ameas,1"&CHR(10),"",1,0)
  EndIf
EndSub


Sub CollectWMT700
  Dim NBR ' Number of Bytes Returned
  '&H0DA -> WM | &H0DA0 -> \r\n  (CR)(CF)
  '&H0D0A is the hexadecimal representation for carriage return/line feed
  If With_WMT700 Then
    Call logging("Collect WMT700")
    WhereAmI = "Collect WMT700"

    WMT700() = ""

    SerialOut(SerialTower,"$Apoll,1"&CHR(13)&CHR(10),"Sx",1,100) 
    SerialInRecord(SerialTower,RawWMT700,&H574D,0,&H0D0A,NBR,101)  '  poll,1 is the WMT700 wind, Sx is the last data sent
    SerialOut(SerialTower,"$Asleep"&CHR(13)&CHR(10),"",1,0)

    RawWMT700 = Mid(RawWMT700,7,80)    ' Removing the 6 first digit to pass the numerical value for the type of SplitStr

    Call logging("Raw WMT700: " & RawWMT700) 
    
    If RawWMT700 = "AN" Then
      RawWMT700 = "NAN"
      Call Send_Failled_Sampling_Email("WMT700")
    Else
      SplitStr(WMT700(),RawWMT700,",",6,10)
    EndIf

    UpdateWMT700Table = true

    Call logging("WMT700 Done")
    WhereAmI = "Finish WMT700"
  EndIf
EndSub
