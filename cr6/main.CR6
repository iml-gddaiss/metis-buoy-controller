'#####################################################################################
'Date: 04 avril 2023
'Program author: Anthony Ouellet
'Modified by: Jerome Guay
'
' Notes: 
' TODO: faire des sub routine pour les commandes envoyer au instrument et le traitement
' TODO: Convention de nom entre variable, constante, table etc
'#####################################################################################
'------------------------------------------------------------------------------
'----------------------------- Main Program -----------------------------------
'------------------------------------------------------------------------------

'################################ TODO ###############################################

SequentialMode
AngleDegrees
PreserveVariables

'Tower instruments
'#T1 Anemometer WMT700
'#T2 Weather station WMXT536
'#T3 Compass DCM260B
'#T4 GPS 19xHVS
'#T5 PAR
'#T6 HyperOCR_I

'Well instruments
'#W1 CTD SBE37 w/ Pump SBE05
'#W2 SeaFet
'#W3 ECO-Triplet
'#W4 SUNA
'#W5 PCO2
'#W6 Flowmeter
'#W7 HyperOCR_R

'Miscellaneous instruments
'#M1 Wave monitor
'#M2 Water detection
'#M3 Power controller
'#M4 ADCP
'#M5 Winch

Public WhereAmI As String ' Debug Purposes

' Never Really used. Was use in WXT for RealTime but then not used.
' Dim Buoy_Time(9) : Alias Buoy_Time = Buoy_Year, Buoy_Month, Buoy_Date, Buoy_Hour, Buoy_Minute, Buoy_Second, Buoy_Microsecond, Buoy_DayofWeek, Buoy_DayofYear

Public ScanDateTime As String ' FIXME this could be a Dim ?

Public TAGString As String * 200
Dim TAGFile As Long
Dim ToTransmit As Long

Sub WriteTagString 'Use in imported CR6 Files
  FileWrite(TAGFile,TAGString & CHR(10),0)
  FileWrite(ToTransmit,TAGString & CHR(10),0)
EndSub

' Instruments state
Include "CPU:buoy_config.cr6"                     '#   Declare Buoy Config
Include "CPU:serials.cr6"
Include "CPU:logging.cr6"                         '#   Logging module
Include "CPU:timers.cr6"                         '#   Timer Values module

'###### DECLARING INSUTRMENTS #####
' Instrument serial a declered in their respective cr6 files.
Include "CPU:wmt700.cr6"                    '#T1 Declare WMT700
Include "CPU:wxt536.cr6"                    '#T2 Declare WXT536
Include "CPU:compass.cr6"                   '#T3 Declare Compass
Include "CPU:gps.cr6"                       '#T4 Declare GPS
Include "CPU:par.cr6"                       '#T5 Declare PAR
Include "CPU:sbe37.cr6"                     '#W1 Declare CTD SBE37 
Include "CPU:eco_triplet.cr6"               '#W2 Declare ECO-Triplet
Include "CPU:seafet.cr6"                    '#W3 Declare Seafet 
Include "CPU:suna.cr6"                      '#W4 Declare SUNA 
Include "CPU:pco2.cr6"                      '#W5 PCO2
Include "CPU:ocr.cr6"                       '#W7 HyperOCR_R  & #T6 HyperOCR_I
Include "CPU:wave_monitor.cr6"              '#M1 Wave_Monitor 
Include "CPU:power_controller.cr6"          '#M3 Power Controller
Include "CPU:adcp.cr6"                      '#M4 ADCP 

Include "CPU:winch.cr6"                     '#M5 Winch 

Include "CPU:tower.cr6"                     '  ?
Include "CPU:water_detection.cr6"           '#M2
Include "CPU:well_pump.cr6"                 ' ?

'####### Different processing past this point #######
'Wind compensation by Compass and GPS
Include "CPU:weather.cr6"                   ' Weather variables  

'###### These need to be declared after the GPS files has been included ####
Sub OpenTagsFiles
  ToTransmit = FileOpen("CRD:" & Buoy_Name & "_" & UTC_Date_Short & UTC_Time_Short & ".dat","a",-1)
  TAGFile = FileOpen("CRD:" & Buoy_Name & "_TAGFile.txt","a",-1)
EndSub

Function InitTagString as String
  InitTagString = "[INIT]" & Buoy_Name & "," & UTC_Date_Hyphen & "," & UTC_Time_DDot & "," & Latitude & "," & Longitude & "," & Heading & "," & Pitch & "," & Roll & "," & COG & "," & SOG & "," & Water_Detection_Main
EndFunction

'####### Slow Sequence | User Command Interface 
Include "CPU:slow_sequences.cr6"             ' ?

' Raw data from the instruments
DataTable (Raw,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,RawR1_Wind,String)
  Sample (1,RawR2_Weather,String)
  Sample (1,RawR3_Rain,String)
  Sample (1,RawWMT700,String)
  Sample (1,RawGPS,String)
  Sample (1,RawPAR,String)  
  Sample (1,RawWave,String)
  Sample (1,RawPower,String)
  Sample (1,RawSBE37,String)
  Sample (1,RawTriplet,String)
  Sample (1,RawSeafet,String)  
  Sample (1,RawSUNADark,String)
  Sample (1,RawSUNALight,String)
  Sample (1,RawPCO2_Water,String)
  Sample (1,RawPCO2_Air,String)
  Sample (1,WinchMessage,String)
EndTable


' Sub CloseCR6SerialPorts
'   Dim port
'   'Close all serial port on CR6 if still open except ADCP
'   For port = 11 To 16 Step 1
'     If port = SerialADCP Then
'       'Do not close the ADCP port
'     Else If port = 13 AND WinchMessage <> "Interval not reach" Then ' is this ok ? was not in Subroutine at the start of the program # JEROME FIXME
'       'Do not close port
'     Else
'       SerialClose(port)
'     EndIf
'   Next port
' EndSub


' Sub CloseSDM4SerialPorts
'   Dim port
'   'Close all serial port on SDM4, except for PCO2 (40) which must stays on is PCO2 is sampling
'   For port = 32 To 47 Step 1
'     If port = SerialPCO2 AND PCO2_Sampling = true Then
'     'Do not close the port
'     Else
'       SerialClose(port)
'     EndIf
'   Next port
' EndSub


BeginProg
  'This is turning the Wifi Off
  SetSetting("WIFIconfig",4)

  Call CloseCR6SerialPorts
      
  Call CloseSDM4SerialPorts

  Call StartADCP

  Scan(Buoy_Interval,Sec,0,0)

  ScanDateTime = Public.TimeStamp(4,0)
  WhereAmI = "Initializing instrument"

  Call logging("Scan Start: ")
    
  Call PowerWaterDetectionSensor
      
  Call PowerTowerInstruments

  Call StartPAR

  Call StartTower485

  Call SampleGPS
  
  Call StartWXT536

  Call StartWMT700
  
  Call StartWeatherTimer

  Call SBE37SalinityCheck
    
  Call PowerWellPump(SBE37_In_Saltwater)
  
  Call StartTriplet
  
  Call SampleCompass
  
  Call CheckWaterDetection

  Call OpenTagsFiles(UTC_Date_Short, UTC_Time_Short)
  
  TAGString = InitTagString()
  Call WriteTagString
    
  Call SamplePowerController(TAGString)

  Call CollectTriplet(TAGString)
     
  Call WaitForWellPump   'Pumped sensor (SBE37, Seafet & SUNA) 

  Call StartSUNA
  
  Call SampleOCRs
  
  Call SampleSBE37(TAGString)
  
  Call SampleSeafet(TAGString, Water_Temp, Salinity)

  Call CollectSUNA(TAGString)

  Call StopWellPump 'Pumped sensor are done, close pump
  
  Call WaitForWeather
    
  Call CollectPAR

  Call CollectWXT536
  
  Call CollectWMT700
  
  Call StopTower485
  
  Call SelectWeatherInstrument   
      
  Call CollectWeather(TAGString, GPS_SOG_X, GPS_SOG_Y, Roll, Pitch)     

  Call CollectWave(TAGString)           

  Call CollectADCP(TAGString)
  
  Call SamplePCO2
  
  Call WinchMission(Salinity, TAGString)
  
  ' Call CloseCR6SerialPorts

  ' Call CloseSDM4SerialPorts        

  Call CloseSerialPorts
  
  CallTable Raw

  Call ResetPCO2RawStrings
  
  TAGString = "[END]\n" '"[END]\n" ?? <--+
  Call WriteTagString '                |
                      '                |
  'TAGString = ""      ' >--------------+
  'Call WriteTagString
  
  FileClose(TAGFile)
  FileClose(ToTransmit)

  Call CollectWinch
  
  WhereAmI = "Scan end"
  
  NextScan
	
  SlowSequence
    Scan(1,Sec,0,0)
      Call TowerSwitchSequence

      Call WellSwitchSequence

      Call ADCPBreakSequence
    NextScan
EndProg


