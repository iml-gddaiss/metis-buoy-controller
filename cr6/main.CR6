'#####################################################################################
'Date: 04 avril 2023
'Program author: Anthony Ouellet
'Modified by: Jerome Guay
'
'#####################################################################################
'------------------------------------------------------------------------------
'----------------------------- Main Program -----------------------------------
'------------------------------------------------------------------------------

'################################ TODO ###############################################

SequentialMode
AngleDegrees
PreserveVariables

'Tower instruments
'#T1 Anemometer WMT700
'#T2 Weather station WMXT536
'#T3 Compass DCM260B
'#T4 GPS 19xHVS
'#T5 PAR
'#T6 HyperOCR_I

'Well instruments
'#W1 CTD SBE37 w/ Pump SBE05
'#W2 SeaFet
'#W3 ECO-Triplet
'#W4 SUNA
'#W5 PCO2
'#W6 Flowmeter
'#W7 HyperOCR_R

'Miscellaneous instruments
'#M1 Wave monitor
'#M2 Water detection
'#M3 Power controller
'#M4 ADCP
'#M5 Winch

Public WhereAmI As String ' Debug Purposes

Public ScanTimeStamp(2) As String : Alias ScanTimeStamp = ScanDate, ScanTime 

Public TAGString As String * 200
Dim TAGFile As Long 
Dim ToTransmit As Long ' --------- Fixme ToTransmitFile ?

' Instruments state
Include "CPU:buoy_config.cr6"                     '#   Declare Buoy Config
Include "CPU:serials.cr6"
Include "CPU:logging.cr6"                         '#   Logging module
Include "CPU:timers.cr6"                         '#   Timer Values module


'###### DECLARING INSUTRMENTS #####
' Instrument serial a declered in their respective cr6 files.
Include "CPU:wmt700.cr6"                    '#T1 Declare WMT700
Include "CPU:wxt536.cr6"                    '#T2 Declare WXT536
Include "CPU:compass.cr6"                   '#T3 Declare Compass
Include "CPU:gps.cr6"                       '#T4 Declare GPS
Include "CPU:par.cr6"                       '#T5 Declare PAR
Include "CPU:sbe37.cr6"                     '#W1 Declare CTD SBE37 
Include "CPU:eco_triplet.cr6"               '#W2 Declare ECO-Triplet
Include "CPU:seafet.cr6"                    '#W3 Declare Seafet   (Needs to be included after CTD SBE37) ?
Include "CPU:suna.cr6"                      '#W4 Declare SUNA 
Include "CPU:pco2.cr6"                      '#W5 PCO2
Include "CPU:ocr.cr6"                       '#W7 HyperOCR_R  & #T6 HyperOCR_I
Include "CPU:wave.cr6"              '#M1 Wave_Monitor 
Include "CPU:power_controller.cr6"          '#M3 Power Controller
Include "CPU:adcp.cr6"                      '#M4 ADCP 

Include "CPU:winch.cr6"                     '#M5 Winch 

Include "CPU:tower.cr6"                     '  ?
Include "CPU:water_detection.cr6"           '#M2
Include "CPU:well_pump.cr6"                 ' ?

'####### Different processing past this point #######
'Wind compensation by Compass and GPS
Include "CPU:weather.cr6"                   ' Weather variables  


'####### Slow Sequence | User Command Interface 
Include "CPU:slow_sequences.cr6"             ' ?


' FileRaw data from the instruments
DataTable (FileRaw,1,-1)
  DataInterval(0,0,Sec,10)
  Sample (1,RawR1_Wind,String)
  Sample (1,RawR2_Weather,String)
  Sample (1,RawR3_Rain,String)
  Sample (1,RawWMT700,String)
  Sample (1,RawGPS,String)
  Sample (1,RawPAR,String)  
  Sample (1,RawWave,String)
  Sample (1,RawPower,String)
  Sample (1,RawSBE37,String)
  Sample (1,RawTriplet,String)
  Sample (1,RawSeafet,String)  
  Sample (1,RawSUNADark,String)
  Sample (1,RawSUNALight,String)
  Sample (1,RawPCO2_Water,String)
  Sample (1,RawPCO2_Air,String)
  Sample (1,WinchMessage,String)
EndTable


Sub WriteTagString 'This needs to be declare before importing CR6 Files since they used it. (maybe not TODO TEST)
  FileWrite(TAGFile,TAGString & CHR(10),0)
  FileWrite(ToTransmit,TAGString & CHR(10),0)
EndSub


' These need to be declared after the GPS files has been included. (maybe not TODO TEST)
Sub OpenTagsFiles
  ToTransmit = FileOpen("CRD:" & Buoy_Name & "_" & Replace(ScanDate, "-", "") & Replace(ScanTime, ":", "") & ".dat","a",-1)
  TAGFile = FileOpen("CRD:" & Buoy_Name & "_TAGFile.txt","a",-1)
EndSub

Sub CloseTagsFiles
  FileClose(TAGFile)
  FileClose(ToTransmit)
EndSub

Function InitTagString as String
  InitTagString = "[INIT]" & Buoy_Name & "," & ScanDate & "," & ScanTime & "," & Latitude & "," & Longitude & "," & Heading & "," & Pitch & "," & Roll & "," & COG & "," & SOG & "," & Water_Detection_Main
EndFunction

Function EndTagString as String
  EndTagString = "[END]" & CHR(10)
EndFunction

Sub ResetTablesUpdateFlag
  UpdateGPSTable = false
  UpdateCompassTable = false
  UpdatePowerTable = false
  UpdateTripleTable = false
  UpdateHyperOCRTable = false
  UpdateSBE37Table = false
  UpdateSeafetTable = false
  UpdateSUNATable = false
  UpdatePARTable = false
  UpdateWXT536Table = false
  UpdateWMT700Table = false
  UpdateWeatherTable = false
  UpdateWaveTable = false
  UpdateADCPTable = false 
  UpdatePCO2Tables = false
EndSub


Sub GetScanDateTime
  SplitStr(ScanTimeStamp, Public.TimeStamp(4,0), " ", 2, 5) ' ScanTimeStamp = (ScanDate, ScanTime)
  Call logging("Scan TimeStamp: " & ScanDate &"T"& ScanTime)
EndSub

Sub GPSTimeAjustment 
  'Test FIXME ME
  If With_GPS AND GPS_Date <> "" AND GPS_Time <> "" Then
    ClockSet(GPS_Date &" "& GPS_Time)
  EndIf

EndSub


BeginProg
  SetSetting("WIFIconfig",4) 'This is turning the Wifi Off
 
  Call CloseSerialPorts

  Call StartADCP

  Call StartRainTimer

  Scan(Buoy_Interval_Min,Min,0,0)
  
  Call GetScanDateTime
  
  WhereAmI = "Initializing instrument"

  Call logging("Scan Start: ")
    
  Call PowerWaterDetectionMain
      
  Call PowerTowerInstruments ' PAR, WMT700, Compass, With_OCR_I. Start Tower_Timer

  Call StartPAR

  Call StartTower485         ' WXT536, WMT700, Compass

  Call SampleGPS             ' GPS samples for 10s. Gives time to other tower instrument to initialize.

  Call GPSTimeAjustment

  Call ResetWXT536

  Call StartWMT700           ' Slow to start
  
  Call StartATMSTimer

  Call SBE37SalinityCheck
    
  Call PowerWellPump        ' Power Well Pump and Start Well Timer.
  
  Call StartTriplet         ' Starts Triplet_Timer
  
  Call SampleCompass        ' Requires GPS Magnetic Declination (If Magnetic Declination is sampled, last collected value is used ?) --- FIXME ---
  
  Call CheckWaterDectectionMain

  Call OpenTagsFiles

  TAGString = InitTagString()             'Requires Gps, Compass and WaterDectection Variables.
  Call WriteTagString
    
  Call SamplePowerController

  Call CollectTriplet
  
  Call WaitForWellPump   ' Well Instrument that required SBE37, Seafet, SUNA, OCR_R (Sensor Conditionning).
  Call StartSUNA         ' why don't isn't SUNA started in THE begining --- FIXME ---
  Call SampleOCRs
  Call SampleSBE37
  Call SampleSeafet(Water_Temp, Salinity)
  Call CollectSUNA
  Call StopWellPump 
  
  Call WaitForWeather        ' Tower Instrument that required to sample over time
  Call CollectPAR
  Call CollectWXT536 
  Call CollectWMT700
  Call StopTower485
        
  Call ProcessWeather(Heading)     

  Call SampleWave

  Call CollectADCP
  
  Call PCO2Sampling
  
  Call WinchMission      

  Call CloseSerialPorts

  ' ### Updating Table Files ### ' Each Table is define with an update Condition.
  CallTable FileGPS
  CallTable FileCompass
  CallTable FilePower
  CallTable FileTriplet
  CallTable FileHyperOCR
  CallTable FileSBE37
  CallTable FileSeafet
  CallTable FileSUNA_Light
  CallTable FileSUNA_Dark
  CallTable FilePAR
  CallTable FileWXT536
  CallTable FileWMT700
  CallTable FileWeather
  CallTable FileWave
  CallTable FileADCP
  CallTable FilePCO2A
  CallTable FilePCO2W  
  CallTable FileRaw
  
  Call ResetPCO2RawStrings

  Call ResetTablesUpdateFlag
  
  TAGString = EndTagString()
  Call WriteTagString   

  Call CloseTagsFiles

  Call CollectWinch
  
  WhereAmI = "Scan end"
  
  NextScan
	
  SlowSequence
    Scan(1,Sec,0,0)
      Call TowerSwitchSequence

      Call WellSwitchSequence

      Call ADCPBreakSequence
    NextScan
EndProg


